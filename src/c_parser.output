State 104 conflicts: 1 shift/reduce
State 131 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: EXPR_TREE

    2 EXPR_TREE: EXPR
    3          | EXPR_TREE EXPR

    4 EXPR: FUNCTION
    5     | DECLARATION

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT DECLARATOR TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT

    8 REC_DECLARATION: DECLARATION
    9                | REC_DECLARATION DECLARATION

   10 DECLARATION: VARTYPE_INT DECLARATOR TOK_SEMICOLON
   11            | VARTYPE_INT DECLARATOR TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON

   12 FUNC_ARGS: VARTYPE_INT DECLARATOR
   13          | FUNC_ARGS TOK_COMMA FUNC_ARGS

   14 FUNC_CALL_ARGS: ASSIGN_EXPR
   15               | FUNC_CALL_ARGS TOK_COMMA ASSIGN_EXPR

   16 DECLARATOR: TOK_VAR
   17           | TOK_VAR TOK_LSQBRACKET ASSIGN_EXPR TOK_RSQBRACKET
   18           | TOK_VAR TOK_LSQBRACKET TOK_RSQBRACKET

   19 ASSIGN_EXPR: LOGIC_EXPR
   20            | TOK_VAR TOK_EQASSIGN ASSIGN_EXPR
   21            | TOK_VAR TOK_ADDASSIGN ASSIGN_EXPR
   22            | TOK_VAR TOK_SUBASSIGN ASSIGN_EXPR
   23            | TOK_VAR TOK_MULASSIGN ASSIGN_EXPR
   24            | TOK_VAR TOK_DIVASSIGN ASSIGN_EXPR
   25            | TOK_VAR TOK_MODASSIGN ASSIGN_EXPR

   26 LOGIC_EXPR: EQ_EXPR
   27           | LOGIC_EXPR TOK_BIT_AND EQ_EXPR
   28           | LOGIC_EXPR TOK_BIT_OR EQ_EXPR

   29 EQ_EXPR: REL_EXPR
   30        | EQ_EXPR TOK_EQ ADD_EXPR
   31        | EQ_EXPR TOK_NEQ ADD_EXPR

   32 REL_EXPR: ADD_EXPR
   33         | REL_EXPR TOK_LE ADD_EXPR
   34         | REL_EXPR TOK_GE ADD_EXPR
   35         | REL_EXPR TOK_G ADD_EXPR
   36         | REL_EXPR TOK_L ADD_EXPR

   37 ADD_EXPR: MULT_EXPR
   38         | ADD_EXPR TOK_PLUS MULT_EXPR
   39         | ADD_EXPR TOK_MINUS MULT_EXPR

   40 MULT_EXPR: UNARY
   41          | MULT_EXPR TOK_MUL UNARY
   42          | MULT_EXPR TOK_DIVIDE UNARY
   43          | MULT_EXPR TOK_MOD UNARY

   44 UNARY: FACTOR
   45      | TOK_MINUS UNARY

   46 FACTOR: TOK_N
   47       | TOK_VAR
   48       | TOK_LBRACKET ASSIGN_EXPR TOK_RBRACKET
   49       | TOK_VAR TOK_LBRACKET TOK_RBRACKET
   50       | TOK_VAR TOK_LBRACKET FUNC_CALL_ARGS TOK_RBRACKET

   51 REC_STATEMENT: STATEMENT
   52              | REC_STATEMENT STATEMENT

   53 STATEMENT: EXPR_STATEMENT
   54          | ITER_STATEMENT
   55          | JUMP_STATEMENT
   56          | SELECT_STATEMENT
   57          | FUNC_STATEMENT

   58 EXPR_STATEMENT: TOK_SEMICOLON
   59               | ASSIGN_EXPR TOK_SEMICOLON

   60 FUNC_STATEMENT: TOK_LCBRACKET TOK_RCBRACKET
   61               | TOK_LCBRACKET REC_STATEMENT TOK_RCBRACKET
   62               | TOK_LCBRACKET REC_DECLARATION TOK_RCBRACKET
   63               | TOK_LCBRACKET REC_DECLARATION REC_STATEMENT TOK_RCBRACKET

   64 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT
   65                 | TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT

   66 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET EXPR TOK_RBRACKET STATEMENT

   67 JUMP_STATEMENT: TOK_BREAK TOK_SEMICOLON
   68               | TOK_CONT TOK_SEMICOLON
   69               | TOK_RETURN TOK_SEMICOLON
   70               | TOK_RETURN FUNCTION TOK_SEMICOLON
   71               | TOK_RETURN LOGIC_EXPR TOK_SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOK_BIT_AND (258) 27
    TOK_BIT_OR (259) 28
    TOK_EQ (260) 30
    TOK_NEQ (261) 31
    TOK_GE (262) 34
    TOK_LE (263) 33
    TOK_G (264) 35
    TOK_L (265) 36
    TOK_IF (266) 64 65
    TOK_WHILE (267) 66
    TOK_ELSE (268) 65
    TOK_RETURN (269) 69 70 71
    TOK_BREAK (270) 67
    TOK_CONT (271) 68
    TOK_MUL (272) 41
    TOK_DIVIDE (273) 42
    TOK_PLUS (274) 38
    TOK_MINUS (275) 39 45
    TOK_MOD (276) 43
    TOK_LBRACKET (277) 6 7 48 49 50 64 65 66
    TOK_RBRACKET (278) 6 7 48 49 50 64 65 66
    TOK_SEMICOLON (279) 10 11 58 59 67 68 69 70 71
    TOK_LCBRACKET (280) 60 61 62 63
    TOK_RCBRACKET (281) 60 61 62 63
    TOK_LSQBRACKET (282) 17 18
    TOK_RSQBRACKET (283) 17 18
    TOK_COMMA (284) 13 15
    TOK_N <number> (285) 46
    TOK_VAR <string> (286) 16 17 18 20 21 22 23 24 25 47 49 50
    VARTYPE_INT <string> (287) 6 7 10 11 12
    TOK_SUBASSIGN (288) 22
    TOK_MULASSIGN (289) 23
    TOK_DIVASSIGN (290) 24
    TOK_ADDASSIGN (291) 21
    TOK_EQASSIGN (292) 11 20
    TOK_MODASSIGN (293) 25


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    ROOT <expr> (40)
        on left: 1
        on right: 0
    EXPR_TREE <expr> (41)
        on left: 2 3
        on right: 1 3
    EXPR <expr> (42)
        on left: 4 5
        on right: 2 3 66
    FUNCTION <expr> (43)
        on left: 6 7
        on right: 4 70
    REC_DECLARATION <expr> (44)
        on left: 8 9
        on right: 9 62 63
    DECLARATION <expr> (45)
        on left: 10 11
        on right: 5 8 9
    FUNC_ARGS <expr> (46)
        on left: 12 13
        on right: 6 13
    FUNC_CALL_ARGS <expr> (47)
        on left: 14 15
        on right: 15 50
    DECLARATOR <expr> (48)
        on left: 16 17 18
        on right: 6 7 10 11 12
    ASSIGN_EXPR <expr> (49)
        on left: 19 20 21 22 23 24 25
        on right: 11 14 15 17 20 21 22 23 24 25 48 59
    LOGIC_EXPR <expr> (50)
        on left: 26 27 28
        on right: 19 27 28 64 65 71
    EQ_EXPR <expr> (51)
        on left: 29 30 31
        on right: 26 27 28 30 31
    REL_EXPR <expr> (52)
        on left: 32 33 34 35 36
        on right: 29 33 34 35 36
    ADD_EXPR <expr> (53)
        on left: 37 38 39
        on right: 30 31 32 33 34 35 36 38 39
    MULT_EXPR <expr> (54)
        on left: 40 41 42 43
        on right: 37 38 39 41 42 43
    UNARY <expr> (55)
        on left: 44 45
        on right: 40 41 42 43 45
    FACTOR <expr> (56)
        on left: 46 47 48 49 50
        on right: 44
    REC_STATEMENT <expr> (57)
        on left: 51 52
        on right: 52 61 63
    STATEMENT <expr> (58)
        on left: 53 54 55 56 57
        on right: 51 52 64 65 66
    EXPR_STATEMENT <expr> (59)
        on left: 58 59
        on right: 53
    FUNC_STATEMENT <expr> (60)
        on left: 60 61 62 63
        on right: 6 7 57
    SELECT_STATEMENT <expr> (61)
        on left: 64 65
        on right: 56
    ITER_STATEMENT <expr> (62)
        on left: 66
        on right: 54
    JUMP_STATEMENT <expr> (63)
        on left: 67 68 69 70 71
        on right: 55


State 0

    0 $accept: . ROOT $end

    VARTYPE_INT  shift, and go to state 1

    ROOT         go to state 2
    EXPR_TREE    go to state 3
    EXPR         go to state 4
    FUNCTION     go to state 5
    DECLARATION  go to state 6


State 1

    6 FUNCTION: VARTYPE_INT . DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT . DECLARATOR TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT
   10 DECLARATION: VARTYPE_INT . DECLARATOR TOK_SEMICOLON
   11            | VARTYPE_INT . DECLARATOR TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON

    TOK_VAR  shift, and go to state 7

    DECLARATOR  go to state 8


State 2

    0 $accept: ROOT . $end

    $end  shift, and go to state 9


State 3

    1 ROOT: EXPR_TREE .
    3 EXPR_TREE: EXPR_TREE . EXPR

    VARTYPE_INT  shift, and go to state 1

    $default  reduce using rule 1 (ROOT)

    EXPR         go to state 10
    FUNCTION     go to state 5
    DECLARATION  go to state 6


State 4

    2 EXPR_TREE: EXPR .

    $default  reduce using rule 2 (EXPR_TREE)


State 5

    4 EXPR: FUNCTION .

    $default  reduce using rule 4 (EXPR)


State 6

    5 EXPR: DECLARATION .

    $default  reduce using rule 5 (EXPR)


State 7

   16 DECLARATOR: TOK_VAR .
   17           | TOK_VAR . TOK_LSQBRACKET ASSIGN_EXPR TOK_RSQBRACKET
   18           | TOK_VAR . TOK_LSQBRACKET TOK_RSQBRACKET

    TOK_LSQBRACKET  shift, and go to state 11

    $default  reduce using rule 16 (DECLARATOR)


State 8

    6 FUNCTION: VARTYPE_INT DECLARATOR . TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT DECLARATOR . TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT
   10 DECLARATION: VARTYPE_INT DECLARATOR . TOK_SEMICOLON
   11            | VARTYPE_INT DECLARATOR . TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON

    TOK_LBRACKET   shift, and go to state 12
    TOK_SEMICOLON  shift, and go to state 13
    TOK_EQASSIGN   shift, and go to state 14


State 9

    0 $accept: ROOT $end .

    $default  accept


State 10

    3 EXPR_TREE: EXPR_TREE EXPR .

    $default  reduce using rule 3 (EXPR_TREE)


State 11

   17 DECLARATOR: TOK_VAR TOK_LSQBRACKET . ASSIGN_EXPR TOK_RSQBRACKET
   18           | TOK_VAR TOK_LSQBRACKET . TOK_RSQBRACKET

    TOK_MINUS       shift, and go to state 15
    TOK_LBRACKET    shift, and go to state 16
    TOK_RSQBRACKET  shift, and go to state 17
    TOK_N           shift, and go to state 18
    TOK_VAR         shift, and go to state 19

    ASSIGN_EXPR  go to state 20
    LOGIC_EXPR   go to state 21
    EQ_EXPR      go to state 22
    REL_EXPR     go to state 23
    ADD_EXPR     go to state 24
    MULT_EXPR    go to state 25
    UNARY        go to state 26
    FACTOR       go to state 27


State 12

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET . FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT DECLARATOR TOK_LBRACKET . TOK_RBRACKET FUNC_STATEMENT

    TOK_RBRACKET  shift, and go to state 28
    VARTYPE_INT   shift, and go to state 29

    FUNC_ARGS  go to state 30


State 13

   10 DECLARATION: VARTYPE_INT DECLARATOR TOK_SEMICOLON .

    $default  reduce using rule 10 (DECLARATION)


State 14

   11 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN . ASSIGN_EXPR TOK_SEMICOLON

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ASSIGN_EXPR  go to state 31
    LOGIC_EXPR   go to state 21
    EQ_EXPR      go to state 22
    REL_EXPR     go to state 23
    ADD_EXPR     go to state 24
    MULT_EXPR    go to state 25
    UNARY        go to state 26
    FACTOR       go to state 27


State 15

   45 UNARY: TOK_MINUS . UNARY

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    UNARY   go to state 33
    FACTOR  go to state 27


State 16

   48 FACTOR: TOK_LBRACKET . ASSIGN_EXPR TOK_RBRACKET

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ASSIGN_EXPR  go to state 34
    LOGIC_EXPR   go to state 21
    EQ_EXPR      go to state 22
    REL_EXPR     go to state 23
    ADD_EXPR     go to state 24
    MULT_EXPR    go to state 25
    UNARY        go to state 26
    FACTOR       go to state 27


State 17

   18 DECLARATOR: TOK_VAR TOK_LSQBRACKET TOK_RSQBRACKET .

    $default  reduce using rule 18 (DECLARATOR)


State 18

   46 FACTOR: TOK_N .

    $default  reduce using rule 46 (FACTOR)


State 19

   20 ASSIGN_EXPR: TOK_VAR . TOK_EQASSIGN ASSIGN_EXPR
   21            | TOK_VAR . TOK_ADDASSIGN ASSIGN_EXPR
   22            | TOK_VAR . TOK_SUBASSIGN ASSIGN_EXPR
   23            | TOK_VAR . TOK_MULASSIGN ASSIGN_EXPR
   24            | TOK_VAR . TOK_DIVASSIGN ASSIGN_EXPR
   25            | TOK_VAR . TOK_MODASSIGN ASSIGN_EXPR
   47 FACTOR: TOK_VAR .
   49       | TOK_VAR . TOK_LBRACKET TOK_RBRACKET
   50       | TOK_VAR . TOK_LBRACKET FUNC_CALL_ARGS TOK_RBRACKET

    TOK_LBRACKET   shift, and go to state 35
    TOK_SUBASSIGN  shift, and go to state 36
    TOK_MULASSIGN  shift, and go to state 37
    TOK_DIVASSIGN  shift, and go to state 38
    TOK_ADDASSIGN  shift, and go to state 39
    TOK_EQASSIGN   shift, and go to state 40
    TOK_MODASSIGN  shift, and go to state 41

    $default  reduce using rule 47 (FACTOR)


State 20

   17 DECLARATOR: TOK_VAR TOK_LSQBRACKET ASSIGN_EXPR . TOK_RSQBRACKET

    TOK_RSQBRACKET  shift, and go to state 42


State 21

   19 ASSIGN_EXPR: LOGIC_EXPR .
   27 LOGIC_EXPR: LOGIC_EXPR . TOK_BIT_AND EQ_EXPR
   28           | LOGIC_EXPR . TOK_BIT_OR EQ_EXPR

    TOK_BIT_AND  shift, and go to state 43
    TOK_BIT_OR   shift, and go to state 44

    $default  reduce using rule 19 (ASSIGN_EXPR)


State 22

   26 LOGIC_EXPR: EQ_EXPR .
   30 EQ_EXPR: EQ_EXPR . TOK_EQ ADD_EXPR
   31        | EQ_EXPR . TOK_NEQ ADD_EXPR

    TOK_EQ   shift, and go to state 45
    TOK_NEQ  shift, and go to state 46

    $default  reduce using rule 26 (LOGIC_EXPR)


State 23

   29 EQ_EXPR: REL_EXPR .
   33 REL_EXPR: REL_EXPR . TOK_LE ADD_EXPR
   34         | REL_EXPR . TOK_GE ADD_EXPR
   35         | REL_EXPR . TOK_G ADD_EXPR
   36         | REL_EXPR . TOK_L ADD_EXPR

    TOK_GE  shift, and go to state 47
    TOK_LE  shift, and go to state 48
    TOK_G   shift, and go to state 49
    TOK_L   shift, and go to state 50

    $default  reduce using rule 29 (EQ_EXPR)


State 24

   32 REL_EXPR: ADD_EXPR .
   38 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   39         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 51
    TOK_MINUS  shift, and go to state 52

    $default  reduce using rule 32 (REL_EXPR)


State 25

   37 ADD_EXPR: MULT_EXPR .
   41 MULT_EXPR: MULT_EXPR . TOK_MUL UNARY
   42          | MULT_EXPR . TOK_DIVIDE UNARY
   43          | MULT_EXPR . TOK_MOD UNARY

    TOK_MUL     shift, and go to state 53
    TOK_DIVIDE  shift, and go to state 54
    TOK_MOD     shift, and go to state 55

    $default  reduce using rule 37 (ADD_EXPR)


State 26

   40 MULT_EXPR: UNARY .

    $default  reduce using rule 40 (MULT_EXPR)


State 27

   44 UNARY: FACTOR .

    $default  reduce using rule 44 (UNARY)


State 28

    7 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET TOK_RBRACKET . FUNC_STATEMENT

    TOK_LCBRACKET  shift, and go to state 56

    FUNC_STATEMENT  go to state 57


State 29

   12 FUNC_ARGS: VARTYPE_INT . DECLARATOR

    TOK_VAR  shift, and go to state 7

    DECLARATOR  go to state 58


State 30

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS . TOK_RBRACKET FUNC_STATEMENT
   13 FUNC_ARGS: FUNC_ARGS . TOK_COMMA FUNC_ARGS

    TOK_RBRACKET  shift, and go to state 59
    TOK_COMMA     shift, and go to state 60


State 31

   11 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN ASSIGN_EXPR . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 61


State 32

   47 FACTOR: TOK_VAR .
   49       | TOK_VAR . TOK_LBRACKET TOK_RBRACKET
   50       | TOK_VAR . TOK_LBRACKET FUNC_CALL_ARGS TOK_RBRACKET

    TOK_LBRACKET  shift, and go to state 35

    $default  reduce using rule 47 (FACTOR)


State 33

   45 UNARY: TOK_MINUS UNARY .

    $default  reduce using rule 45 (UNARY)


State 34

   48 FACTOR: TOK_LBRACKET ASSIGN_EXPR . TOK_RBRACKET

    TOK_RBRACKET  shift, and go to state 62


State 35

   49 FACTOR: TOK_VAR TOK_LBRACKET . TOK_RBRACKET
   50       | TOK_VAR TOK_LBRACKET . FUNC_CALL_ARGS TOK_RBRACKET

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_RBRACKET  shift, and go to state 63
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    FUNC_CALL_ARGS  go to state 64
    ASSIGN_EXPR     go to state 65
    LOGIC_EXPR      go to state 21
    EQ_EXPR         go to state 22
    REL_EXPR        go to state 23
    ADD_EXPR        go to state 24
    MULT_EXPR       go to state 25
    UNARY           go to state 26
    FACTOR          go to state 27


State 36

   22 ASSIGN_EXPR: TOK_VAR TOK_SUBASSIGN . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ASSIGN_EXPR  go to state 66
    LOGIC_EXPR   go to state 21
    EQ_EXPR      go to state 22
    REL_EXPR     go to state 23
    ADD_EXPR     go to state 24
    MULT_EXPR    go to state 25
    UNARY        go to state 26
    FACTOR       go to state 27


State 37

   23 ASSIGN_EXPR: TOK_VAR TOK_MULASSIGN . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ASSIGN_EXPR  go to state 67
    LOGIC_EXPR   go to state 21
    EQ_EXPR      go to state 22
    REL_EXPR     go to state 23
    ADD_EXPR     go to state 24
    MULT_EXPR    go to state 25
    UNARY        go to state 26
    FACTOR       go to state 27


State 38

   24 ASSIGN_EXPR: TOK_VAR TOK_DIVASSIGN . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ASSIGN_EXPR  go to state 68
    LOGIC_EXPR   go to state 21
    EQ_EXPR      go to state 22
    REL_EXPR     go to state 23
    ADD_EXPR     go to state 24
    MULT_EXPR    go to state 25
    UNARY        go to state 26
    FACTOR       go to state 27


State 39

   21 ASSIGN_EXPR: TOK_VAR TOK_ADDASSIGN . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ASSIGN_EXPR  go to state 69
    LOGIC_EXPR   go to state 21
    EQ_EXPR      go to state 22
    REL_EXPR     go to state 23
    ADD_EXPR     go to state 24
    MULT_EXPR    go to state 25
    UNARY        go to state 26
    FACTOR       go to state 27


State 40

   20 ASSIGN_EXPR: TOK_VAR TOK_EQASSIGN . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ASSIGN_EXPR  go to state 70
    LOGIC_EXPR   go to state 21
    EQ_EXPR      go to state 22
    REL_EXPR     go to state 23
    ADD_EXPR     go to state 24
    MULT_EXPR    go to state 25
    UNARY        go to state 26
    FACTOR       go to state 27


State 41

   25 ASSIGN_EXPR: TOK_VAR TOK_MODASSIGN . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ASSIGN_EXPR  go to state 71
    LOGIC_EXPR   go to state 21
    EQ_EXPR      go to state 22
    REL_EXPR     go to state 23
    ADD_EXPR     go to state 24
    MULT_EXPR    go to state 25
    UNARY        go to state 26
    FACTOR       go to state 27


State 42

   17 DECLARATOR: TOK_VAR TOK_LSQBRACKET ASSIGN_EXPR TOK_RSQBRACKET .

    $default  reduce using rule 17 (DECLARATOR)


State 43

   27 LOGIC_EXPR: LOGIC_EXPR TOK_BIT_AND . EQ_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    EQ_EXPR    go to state 72
    REL_EXPR   go to state 23
    ADD_EXPR   go to state 24
    MULT_EXPR  go to state 25
    UNARY      go to state 26
    FACTOR     go to state 27


State 44

   28 LOGIC_EXPR: LOGIC_EXPR TOK_BIT_OR . EQ_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    EQ_EXPR    go to state 73
    REL_EXPR   go to state 23
    ADD_EXPR   go to state 24
    MULT_EXPR  go to state 25
    UNARY      go to state 26
    FACTOR     go to state 27


State 45

   30 EQ_EXPR: EQ_EXPR TOK_EQ . ADD_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    ADD_EXPR   go to state 74
    MULT_EXPR  go to state 25
    UNARY      go to state 26
    FACTOR     go to state 27


State 46

   31 EQ_EXPR: EQ_EXPR TOK_NEQ . ADD_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    ADD_EXPR   go to state 75
    MULT_EXPR  go to state 25
    UNARY      go to state 26
    FACTOR     go to state 27


State 47

   34 REL_EXPR: REL_EXPR TOK_GE . ADD_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    ADD_EXPR   go to state 76
    MULT_EXPR  go to state 25
    UNARY      go to state 26
    FACTOR     go to state 27


State 48

   33 REL_EXPR: REL_EXPR TOK_LE . ADD_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    ADD_EXPR   go to state 77
    MULT_EXPR  go to state 25
    UNARY      go to state 26
    FACTOR     go to state 27


State 49

   35 REL_EXPR: REL_EXPR TOK_G . ADD_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    ADD_EXPR   go to state 78
    MULT_EXPR  go to state 25
    UNARY      go to state 26
    FACTOR     go to state 27


State 50

   36 REL_EXPR: REL_EXPR TOK_L . ADD_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    ADD_EXPR   go to state 79
    MULT_EXPR  go to state 25
    UNARY      go to state 26
    FACTOR     go to state 27


State 51

   38 ADD_EXPR: ADD_EXPR TOK_PLUS . MULT_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    MULT_EXPR  go to state 80
    UNARY      go to state 26
    FACTOR     go to state 27


State 52

   39 ADD_EXPR: ADD_EXPR TOK_MINUS . MULT_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    MULT_EXPR  go to state 81
    UNARY      go to state 26
    FACTOR     go to state 27


State 53

   41 MULT_EXPR: MULT_EXPR TOK_MUL . UNARY

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    UNARY   go to state 82
    FACTOR  go to state 27


State 54

   42 MULT_EXPR: MULT_EXPR TOK_DIVIDE . UNARY

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    UNARY   go to state 83
    FACTOR  go to state 27


State 55

   43 MULT_EXPR: MULT_EXPR TOK_MOD . UNARY

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    UNARY   go to state 84
    FACTOR  go to state 27


State 56

   60 FUNC_STATEMENT: TOK_LCBRACKET . TOK_RCBRACKET
   61               | TOK_LCBRACKET . REC_STATEMENT TOK_RCBRACKET
   62               | TOK_LCBRACKET . REC_DECLARATION TOK_RCBRACKET
   63               | TOK_LCBRACKET . REC_DECLARATION REC_STATEMENT TOK_RCBRACKET

    TOK_IF         shift, and go to state 85
    TOK_WHILE      shift, and go to state 86
    TOK_RETURN     shift, and go to state 87
    TOK_BREAK      shift, and go to state 88
    TOK_CONT       shift, and go to state 89
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 90
    TOK_LCBRACKET  shift, and go to state 56
    TOK_RCBRACKET  shift, and go to state 91
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 19
    VARTYPE_INT    shift, and go to state 92

    REC_DECLARATION   go to state 93
    DECLARATION       go to state 94
    ASSIGN_EXPR       go to state 95
    LOGIC_EXPR        go to state 21
    EQ_EXPR           go to state 22
    REL_EXPR          go to state 23
    ADD_EXPR          go to state 24
    MULT_EXPR         go to state 25
    UNARY             go to state 26
    FACTOR            go to state 27
    REC_STATEMENT     go to state 96
    STATEMENT         go to state 97
    EXPR_STATEMENT    go to state 98
    FUNC_STATEMENT    go to state 99
    SELECT_STATEMENT  go to state 100
    ITER_STATEMENT    go to state 101
    JUMP_STATEMENT    go to state 102


State 57

    7 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT .

    $default  reduce using rule 7 (FUNCTION)


State 58

   12 FUNC_ARGS: VARTYPE_INT DECLARATOR .

    $default  reduce using rule 12 (FUNC_ARGS)


State 59

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET . FUNC_STATEMENT

    TOK_LCBRACKET  shift, and go to state 56

    FUNC_STATEMENT  go to state 103


State 60

   13 FUNC_ARGS: FUNC_ARGS TOK_COMMA . FUNC_ARGS

    VARTYPE_INT  shift, and go to state 29

    FUNC_ARGS  go to state 104


State 61

   11 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON .

    $default  reduce using rule 11 (DECLARATION)


State 62

   48 FACTOR: TOK_LBRACKET ASSIGN_EXPR TOK_RBRACKET .

    $default  reduce using rule 48 (FACTOR)


State 63

   49 FACTOR: TOK_VAR TOK_LBRACKET TOK_RBRACKET .

    $default  reduce using rule 49 (FACTOR)


State 64

   15 FUNC_CALL_ARGS: FUNC_CALL_ARGS . TOK_COMMA ASSIGN_EXPR
   50 FACTOR: TOK_VAR TOK_LBRACKET FUNC_CALL_ARGS . TOK_RBRACKET

    TOK_RBRACKET  shift, and go to state 105
    TOK_COMMA     shift, and go to state 106


State 65

   14 FUNC_CALL_ARGS: ASSIGN_EXPR .

    $default  reduce using rule 14 (FUNC_CALL_ARGS)


State 66

   22 ASSIGN_EXPR: TOK_VAR TOK_SUBASSIGN ASSIGN_EXPR .

    $default  reduce using rule 22 (ASSIGN_EXPR)


State 67

   23 ASSIGN_EXPR: TOK_VAR TOK_MULASSIGN ASSIGN_EXPR .

    $default  reduce using rule 23 (ASSIGN_EXPR)


State 68

   24 ASSIGN_EXPR: TOK_VAR TOK_DIVASSIGN ASSIGN_EXPR .

    $default  reduce using rule 24 (ASSIGN_EXPR)


State 69

   21 ASSIGN_EXPR: TOK_VAR TOK_ADDASSIGN ASSIGN_EXPR .

    $default  reduce using rule 21 (ASSIGN_EXPR)


State 70

   20 ASSIGN_EXPR: TOK_VAR TOK_EQASSIGN ASSIGN_EXPR .

    $default  reduce using rule 20 (ASSIGN_EXPR)


State 71

   25 ASSIGN_EXPR: TOK_VAR TOK_MODASSIGN ASSIGN_EXPR .

    $default  reduce using rule 25 (ASSIGN_EXPR)


State 72

   27 LOGIC_EXPR: LOGIC_EXPR TOK_BIT_AND EQ_EXPR .
   30 EQ_EXPR: EQ_EXPR . TOK_EQ ADD_EXPR
   31        | EQ_EXPR . TOK_NEQ ADD_EXPR

    TOK_EQ   shift, and go to state 45
    TOK_NEQ  shift, and go to state 46

    $default  reduce using rule 27 (LOGIC_EXPR)


State 73

   28 LOGIC_EXPR: LOGIC_EXPR TOK_BIT_OR EQ_EXPR .
   30 EQ_EXPR: EQ_EXPR . TOK_EQ ADD_EXPR
   31        | EQ_EXPR . TOK_NEQ ADD_EXPR

    TOK_EQ   shift, and go to state 45
    TOK_NEQ  shift, and go to state 46

    $default  reduce using rule 28 (LOGIC_EXPR)


State 74

   30 EQ_EXPR: EQ_EXPR TOK_EQ ADD_EXPR .
   38 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   39         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 51
    TOK_MINUS  shift, and go to state 52

    $default  reduce using rule 30 (EQ_EXPR)


State 75

   31 EQ_EXPR: EQ_EXPR TOK_NEQ ADD_EXPR .
   38 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   39         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 51
    TOK_MINUS  shift, and go to state 52

    $default  reduce using rule 31 (EQ_EXPR)


State 76

   34 REL_EXPR: REL_EXPR TOK_GE ADD_EXPR .
   38 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   39         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 51
    TOK_MINUS  shift, and go to state 52

    $default  reduce using rule 34 (REL_EXPR)


State 77

   33 REL_EXPR: REL_EXPR TOK_LE ADD_EXPR .
   38 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   39         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 51
    TOK_MINUS  shift, and go to state 52

    $default  reduce using rule 33 (REL_EXPR)


State 78

   35 REL_EXPR: REL_EXPR TOK_G ADD_EXPR .
   38 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   39         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 51
    TOK_MINUS  shift, and go to state 52

    $default  reduce using rule 35 (REL_EXPR)


State 79

   36 REL_EXPR: REL_EXPR TOK_L ADD_EXPR .
   38 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   39         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 51
    TOK_MINUS  shift, and go to state 52

    $default  reduce using rule 36 (REL_EXPR)


State 80

   38 ADD_EXPR: ADD_EXPR TOK_PLUS MULT_EXPR .
   41 MULT_EXPR: MULT_EXPR . TOK_MUL UNARY
   42          | MULT_EXPR . TOK_DIVIDE UNARY
   43          | MULT_EXPR . TOK_MOD UNARY

    TOK_MUL     shift, and go to state 53
    TOK_DIVIDE  shift, and go to state 54
    TOK_MOD     shift, and go to state 55

    $default  reduce using rule 38 (ADD_EXPR)


State 81

   39 ADD_EXPR: ADD_EXPR TOK_MINUS MULT_EXPR .
   41 MULT_EXPR: MULT_EXPR . TOK_MUL UNARY
   42          | MULT_EXPR . TOK_DIVIDE UNARY
   43          | MULT_EXPR . TOK_MOD UNARY

    TOK_MUL     shift, and go to state 53
    TOK_DIVIDE  shift, and go to state 54
    TOK_MOD     shift, and go to state 55

    $default  reduce using rule 39 (ADD_EXPR)


State 82

   41 MULT_EXPR: MULT_EXPR TOK_MUL UNARY .

    $default  reduce using rule 41 (MULT_EXPR)


State 83

   42 MULT_EXPR: MULT_EXPR TOK_DIVIDE UNARY .

    $default  reduce using rule 42 (MULT_EXPR)


State 84

   43 MULT_EXPR: MULT_EXPR TOK_MOD UNARY .

    $default  reduce using rule 43 (MULT_EXPR)


State 85

   64 SELECT_STATEMENT: TOK_IF . TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT
   65                 | TOK_IF . TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT

    TOK_LBRACKET  shift, and go to state 107


State 86

   66 ITER_STATEMENT: TOK_WHILE . TOK_LBRACKET EXPR TOK_RBRACKET STATEMENT

    TOK_LBRACKET  shift, and go to state 108


State 87

   69 JUMP_STATEMENT: TOK_RETURN . TOK_SEMICOLON
   70               | TOK_RETURN . FUNCTION TOK_SEMICOLON
   71               | TOK_RETURN . LOGIC_EXPR TOK_SEMICOLON

    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 109
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 32
    VARTYPE_INT    shift, and go to state 110

    FUNCTION    go to state 111
    LOGIC_EXPR  go to state 112
    EQ_EXPR     go to state 22
    REL_EXPR    go to state 23
    ADD_EXPR    go to state 24
    MULT_EXPR   go to state 25
    UNARY       go to state 26
    FACTOR      go to state 27


State 88

   67 JUMP_STATEMENT: TOK_BREAK . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 113


State 89

   68 JUMP_STATEMENT: TOK_CONT . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 114


State 90

   58 EXPR_STATEMENT: TOK_SEMICOLON .

    $default  reduce using rule 58 (EXPR_STATEMENT)


State 91

   60 FUNC_STATEMENT: TOK_LCBRACKET TOK_RCBRACKET .

    $default  reduce using rule 60 (FUNC_STATEMENT)


State 92

   10 DECLARATION: VARTYPE_INT . DECLARATOR TOK_SEMICOLON
   11            | VARTYPE_INT . DECLARATOR TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON

    TOK_VAR  shift, and go to state 7

    DECLARATOR  go to state 115


State 93

    9 REC_DECLARATION: REC_DECLARATION . DECLARATION
   62 FUNC_STATEMENT: TOK_LCBRACKET REC_DECLARATION . TOK_RCBRACKET
   63               | TOK_LCBRACKET REC_DECLARATION . REC_STATEMENT TOK_RCBRACKET

    TOK_IF         shift, and go to state 85
    TOK_WHILE      shift, and go to state 86
    TOK_RETURN     shift, and go to state 87
    TOK_BREAK      shift, and go to state 88
    TOK_CONT       shift, and go to state 89
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 90
    TOK_LCBRACKET  shift, and go to state 56
    TOK_RCBRACKET  shift, and go to state 116
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 19
    VARTYPE_INT    shift, and go to state 92

    DECLARATION       go to state 117
    ASSIGN_EXPR       go to state 95
    LOGIC_EXPR        go to state 21
    EQ_EXPR           go to state 22
    REL_EXPR          go to state 23
    ADD_EXPR          go to state 24
    MULT_EXPR         go to state 25
    UNARY             go to state 26
    FACTOR            go to state 27
    REC_STATEMENT     go to state 118
    STATEMENT         go to state 97
    EXPR_STATEMENT    go to state 98
    FUNC_STATEMENT    go to state 99
    SELECT_STATEMENT  go to state 100
    ITER_STATEMENT    go to state 101
    JUMP_STATEMENT    go to state 102


State 94

    8 REC_DECLARATION: DECLARATION .

    $default  reduce using rule 8 (REC_DECLARATION)


State 95

   59 EXPR_STATEMENT: ASSIGN_EXPR . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 119


State 96

   52 REC_STATEMENT: REC_STATEMENT . STATEMENT
   61 FUNC_STATEMENT: TOK_LCBRACKET REC_STATEMENT . TOK_RCBRACKET

    TOK_IF         shift, and go to state 85
    TOK_WHILE      shift, and go to state 86
    TOK_RETURN     shift, and go to state 87
    TOK_BREAK      shift, and go to state 88
    TOK_CONT       shift, and go to state 89
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 90
    TOK_LCBRACKET  shift, and go to state 56
    TOK_RCBRACKET  shift, and go to state 120
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 19

    ASSIGN_EXPR       go to state 95
    LOGIC_EXPR        go to state 21
    EQ_EXPR           go to state 22
    REL_EXPR          go to state 23
    ADD_EXPR          go to state 24
    MULT_EXPR         go to state 25
    UNARY             go to state 26
    FACTOR            go to state 27
    STATEMENT         go to state 121
    EXPR_STATEMENT    go to state 98
    FUNC_STATEMENT    go to state 99
    SELECT_STATEMENT  go to state 100
    ITER_STATEMENT    go to state 101
    JUMP_STATEMENT    go to state 102


State 97

   51 REC_STATEMENT: STATEMENT .

    $default  reduce using rule 51 (REC_STATEMENT)


State 98

   53 STATEMENT: EXPR_STATEMENT .

    $default  reduce using rule 53 (STATEMENT)


State 99

   57 STATEMENT: FUNC_STATEMENT .

    $default  reduce using rule 57 (STATEMENT)


State 100

   56 STATEMENT: SELECT_STATEMENT .

    $default  reduce using rule 56 (STATEMENT)


State 101

   54 STATEMENT: ITER_STATEMENT .

    $default  reduce using rule 54 (STATEMENT)


State 102

   55 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 55 (STATEMENT)


State 103

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT .

    $default  reduce using rule 6 (FUNCTION)


State 104

   13 FUNC_ARGS: FUNC_ARGS . TOK_COMMA FUNC_ARGS
   13          | FUNC_ARGS TOK_COMMA FUNC_ARGS .

    TOK_COMMA  shift, and go to state 60

    TOK_COMMA  [reduce using rule 13 (FUNC_ARGS)]
    $default   reduce using rule 13 (FUNC_ARGS)


State 105

   50 FACTOR: TOK_VAR TOK_LBRACKET FUNC_CALL_ARGS TOK_RBRACKET .

    $default  reduce using rule 50 (FACTOR)


State 106

   15 FUNC_CALL_ARGS: FUNC_CALL_ARGS TOK_COMMA . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ASSIGN_EXPR  go to state 122
    LOGIC_EXPR   go to state 21
    EQ_EXPR      go to state 22
    REL_EXPR     go to state 23
    ADD_EXPR     go to state 24
    MULT_EXPR    go to state 25
    UNARY        go to state 26
    FACTOR       go to state 27


State 107

   64 SELECT_STATEMENT: TOK_IF TOK_LBRACKET . LOGIC_EXPR TOK_RBRACKET STATEMENT
   65                 | TOK_IF TOK_LBRACKET . LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 32

    LOGIC_EXPR  go to state 123
    EQ_EXPR     go to state 22
    REL_EXPR    go to state 23
    ADD_EXPR    go to state 24
    MULT_EXPR   go to state 25
    UNARY       go to state 26
    FACTOR      go to state 27


State 108

   66 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET . EXPR TOK_RBRACKET STATEMENT

    VARTYPE_INT  shift, and go to state 1

    EXPR         go to state 124
    FUNCTION     go to state 5
    DECLARATION  go to state 6


State 109

   69 JUMP_STATEMENT: TOK_RETURN TOK_SEMICOLON .

    $default  reduce using rule 69 (JUMP_STATEMENT)


State 110

    6 FUNCTION: VARTYPE_INT . DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT . DECLARATOR TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT

    TOK_VAR  shift, and go to state 7

    DECLARATOR  go to state 125


State 111

   70 JUMP_STATEMENT: TOK_RETURN FUNCTION . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 126


State 112

   27 LOGIC_EXPR: LOGIC_EXPR . TOK_BIT_AND EQ_EXPR
   28           | LOGIC_EXPR . TOK_BIT_OR EQ_EXPR
   71 JUMP_STATEMENT: TOK_RETURN LOGIC_EXPR . TOK_SEMICOLON

    TOK_BIT_AND    shift, and go to state 43
    TOK_BIT_OR     shift, and go to state 44
    TOK_SEMICOLON  shift, and go to state 127


State 113

   67 JUMP_STATEMENT: TOK_BREAK TOK_SEMICOLON .

    $default  reduce using rule 67 (JUMP_STATEMENT)


State 114

   68 JUMP_STATEMENT: TOK_CONT TOK_SEMICOLON .

    $default  reduce using rule 68 (JUMP_STATEMENT)


State 115

   10 DECLARATION: VARTYPE_INT DECLARATOR . TOK_SEMICOLON
   11            | VARTYPE_INT DECLARATOR . TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 13
    TOK_EQASSIGN   shift, and go to state 14


State 116

   62 FUNC_STATEMENT: TOK_LCBRACKET REC_DECLARATION TOK_RCBRACKET .

    $default  reduce using rule 62 (FUNC_STATEMENT)


State 117

    9 REC_DECLARATION: REC_DECLARATION DECLARATION .

    $default  reduce using rule 9 (REC_DECLARATION)


State 118

   52 REC_STATEMENT: REC_STATEMENT . STATEMENT
   63 FUNC_STATEMENT: TOK_LCBRACKET REC_DECLARATION REC_STATEMENT . TOK_RCBRACKET

    TOK_IF         shift, and go to state 85
    TOK_WHILE      shift, and go to state 86
    TOK_RETURN     shift, and go to state 87
    TOK_BREAK      shift, and go to state 88
    TOK_CONT       shift, and go to state 89
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 90
    TOK_LCBRACKET  shift, and go to state 56
    TOK_RCBRACKET  shift, and go to state 128
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 19

    ASSIGN_EXPR       go to state 95
    LOGIC_EXPR        go to state 21
    EQ_EXPR           go to state 22
    REL_EXPR          go to state 23
    ADD_EXPR          go to state 24
    MULT_EXPR         go to state 25
    UNARY             go to state 26
    FACTOR            go to state 27
    STATEMENT         go to state 121
    EXPR_STATEMENT    go to state 98
    FUNC_STATEMENT    go to state 99
    SELECT_STATEMENT  go to state 100
    ITER_STATEMENT    go to state 101
    JUMP_STATEMENT    go to state 102


State 119

   59 EXPR_STATEMENT: ASSIGN_EXPR TOK_SEMICOLON .

    $default  reduce using rule 59 (EXPR_STATEMENT)


State 120

   61 FUNC_STATEMENT: TOK_LCBRACKET REC_STATEMENT TOK_RCBRACKET .

    $default  reduce using rule 61 (FUNC_STATEMENT)


State 121

   52 REC_STATEMENT: REC_STATEMENT STATEMENT .

    $default  reduce using rule 52 (REC_STATEMENT)


State 122

   15 FUNC_CALL_ARGS: FUNC_CALL_ARGS TOK_COMMA ASSIGN_EXPR .

    $default  reduce using rule 15 (FUNC_CALL_ARGS)


State 123

   27 LOGIC_EXPR: LOGIC_EXPR . TOK_BIT_AND EQ_EXPR
   28           | LOGIC_EXPR . TOK_BIT_OR EQ_EXPR
   64 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR . TOK_RBRACKET STATEMENT
   65                 | TOK_IF TOK_LBRACKET LOGIC_EXPR . TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT

    TOK_BIT_AND   shift, and go to state 43
    TOK_BIT_OR    shift, and go to state 44
    TOK_RBRACKET  shift, and go to state 129


State 124

   66 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET EXPR . TOK_RBRACKET STATEMENT

    TOK_RBRACKET  shift, and go to state 130


State 125

    6 FUNCTION: VARTYPE_INT DECLARATOR . TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT DECLARATOR . TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT

    TOK_LBRACKET  shift, and go to state 12


State 126

   70 JUMP_STATEMENT: TOK_RETURN FUNCTION TOK_SEMICOLON .

    $default  reduce using rule 70 (JUMP_STATEMENT)


State 127

   71 JUMP_STATEMENT: TOK_RETURN LOGIC_EXPR TOK_SEMICOLON .

    $default  reduce using rule 71 (JUMP_STATEMENT)


State 128

   63 FUNC_STATEMENT: TOK_LCBRACKET REC_DECLARATION REC_STATEMENT TOK_RCBRACKET .

    $default  reduce using rule 63 (FUNC_STATEMENT)


State 129

   64 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET . STATEMENT
   65                 | TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET . STATEMENT TOK_ELSE STATEMENT

    TOK_IF         shift, and go to state 85
    TOK_WHILE      shift, and go to state 86
    TOK_RETURN     shift, and go to state 87
    TOK_BREAK      shift, and go to state 88
    TOK_CONT       shift, and go to state 89
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 90
    TOK_LCBRACKET  shift, and go to state 56
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 19

    ASSIGN_EXPR       go to state 95
    LOGIC_EXPR        go to state 21
    EQ_EXPR           go to state 22
    REL_EXPR          go to state 23
    ADD_EXPR          go to state 24
    MULT_EXPR         go to state 25
    UNARY             go to state 26
    FACTOR            go to state 27
    STATEMENT         go to state 131
    EXPR_STATEMENT    go to state 98
    FUNC_STATEMENT    go to state 99
    SELECT_STATEMENT  go to state 100
    ITER_STATEMENT    go to state 101
    JUMP_STATEMENT    go to state 102


State 130

   66 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET EXPR TOK_RBRACKET . STATEMENT

    TOK_IF         shift, and go to state 85
    TOK_WHILE      shift, and go to state 86
    TOK_RETURN     shift, and go to state 87
    TOK_BREAK      shift, and go to state 88
    TOK_CONT       shift, and go to state 89
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 90
    TOK_LCBRACKET  shift, and go to state 56
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 19

    ASSIGN_EXPR       go to state 95
    LOGIC_EXPR        go to state 21
    EQ_EXPR           go to state 22
    REL_EXPR          go to state 23
    ADD_EXPR          go to state 24
    MULT_EXPR         go to state 25
    UNARY             go to state 26
    FACTOR            go to state 27
    STATEMENT         go to state 132
    EXPR_STATEMENT    go to state 98
    FUNC_STATEMENT    go to state 99
    SELECT_STATEMENT  go to state 100
    ITER_STATEMENT    go to state 101
    JUMP_STATEMENT    go to state 102


State 131

   64 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT .
   65                 | TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT . TOK_ELSE STATEMENT

    TOK_ELSE  shift, and go to state 133

    TOK_ELSE  [reduce using rule 64 (SELECT_STATEMENT)]
    $default  reduce using rule 64 (SELECT_STATEMENT)


State 132

   66 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET EXPR TOK_RBRACKET STATEMENT .

    $default  reduce using rule 66 (ITER_STATEMENT)


State 133

   65 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE . STATEMENT

    TOK_IF         shift, and go to state 85
    TOK_WHILE      shift, and go to state 86
    TOK_RETURN     shift, and go to state 87
    TOK_BREAK      shift, and go to state 88
    TOK_CONT       shift, and go to state 89
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 90
    TOK_LCBRACKET  shift, and go to state 56
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 19

    ASSIGN_EXPR       go to state 95
    LOGIC_EXPR        go to state 21
    EQ_EXPR           go to state 22
    REL_EXPR          go to state 23
    ADD_EXPR          go to state 24
    MULT_EXPR         go to state 25
    UNARY             go to state 26
    FACTOR            go to state 27
    STATEMENT         go to state 134
    EXPR_STATEMENT    go to state 98
    FUNC_STATEMENT    go to state 99
    SELECT_STATEMENT  go to state 100
    ITER_STATEMENT    go to state 101
    JUMP_STATEMENT    go to state 102


State 134

   65 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT .

    $default  reduce using rule 65 (SELECT_STATEMENT)
