State 101 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: EXPR_TREE

    2 EXPR_TREE: EXPR
    3          | EXPR_TREE EXPR

    4 EXPR: FUNCTION
    5     | DECLARATION

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT DECLARATOR TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT

    8 REC_DECLARATION: DECLARATION
    9                | REC_DECLARATION DECLARATION

   10 DECLARATION: VARTYPE_INT DECLARATOR TOK_SEMICOLON
   11            | VARTYPE_INT DECLARATOR TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON
   12            | VARTYPE_INT DECLARATOR TOK_EQASSIGN TOK_LCBRACKET TOK_RCBRACKET TOK_SEMICOLON
   13            | VARTYPE_INT DECLARATOR TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON

   14 FUNC_ARGS: VARTYPE_INT DECLARATOR
   15          | FUNC_ARGS TOK_COMMA FUNC_ARGS

   16 FUNC_CALL_ARGS: ASSIGN_EXPR
   17               | FUNC_CALL_ARGS TOK_COMMA ASSIGN_EXPR

   18 DECLARATOR: TOK_VAR
   19           | TOK_VAR TOK_LSQBRACKET LOGIC_EXPR TOK_RSQBRACKET
   20           | TOK_VAR TOK_LSQBRACKET TOK_RSQBRACKET

   21 ASSIGN_EXPR: LOGIC_EXPR
   22            | TOK_VAR TOK_EQASSIGN ASSIGN_EXPR
   23            | TOK_VAR TOK_ADDASSIGN ASSIGN_EXPR
   24            | TOK_VAR TOK_SUBASSIGN ASSIGN_EXPR
   25            | TOK_VAR TOK_MULASSIGN ASSIGN_EXPR
   26            | TOK_VAR TOK_DIVASSIGN ASSIGN_EXPR
   27            | TOK_VAR TOK_MODASSIGN ASSIGN_EXPR

   28 LOGIC_EXPR: EQ_EXPR
   29           | LOGIC_EXPR TOK_BIT_AND EQ_EXPR
   30           | LOGIC_EXPR TOK_BIT_OR EQ_EXPR

   31 EQ_EXPR: REL_EXPR
   32        | EQ_EXPR TOK_EQ ADD_EXPR
   33        | EQ_EXPR TOK_NEQ ADD_EXPR

   34 REL_EXPR: ADD_EXPR
   35         | REL_EXPR TOK_LE ADD_EXPR
   36         | REL_EXPR TOK_GE ADD_EXPR
   37         | REL_EXPR TOK_G ADD_EXPR
   38         | REL_EXPR TOK_L ADD_EXPR

   39 ADD_EXPR: MULT_EXPR
   40         | ADD_EXPR TOK_PLUS MULT_EXPR
   41         | ADD_EXPR TOK_MINUS MULT_EXPR

   42 MULT_EXPR: UNARY
   43          | MULT_EXPR TOK_MUL UNARY
   44          | MULT_EXPR TOK_DIVIDE UNARY
   45          | MULT_EXPR TOK_MOD UNARY

   46 UNARY: FACTOR
   47      | TOK_MINUS UNARY

   48 FACTOR: TOK_N
   49       | TOK_VAR
   50       | TOK_LBRACKET ASSIGN_EXPR TOK_RBRACKET
   51       | TOK_VAR TOK_LBRACKET TOK_RBRACKET
   52       | TOK_VAR TOK_LBRACKET FUNC_CALL_ARGS TOK_RBRACKET

   53 REC_STATEMENT: STATEMENT
   54              | REC_STATEMENT STATEMENT

   55 STATEMENT: EXPR_STATEMENT
   56          | ITER_STATEMENT
   57          | JUMP_STATEMENT
   58          | SELECT_STATEMENT
   59          | FUNC_STATEMENT

   60 EXPR_STATEMENT: TOK_SEMICOLON
   61               | ASSIGN_EXPR TOK_SEMICOLON

   62 FUNC_STATEMENT: TOK_LCBRACKET TOK_RCBRACKET
   63               | TOK_LCBRACKET REC_STATEMENT TOK_RCBRACKET
   64               | TOK_LCBRACKET REC_DECLARATION TOK_RCBRACKET
   65               | TOK_LCBRACKET REC_DECLARATION REC_STATEMENT TOK_RCBRACKET

   66 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT
   67                 | TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT

   68 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET EXPR TOK_RBRACKET STATEMENT

   69 JUMP_STATEMENT: TOK_BREAK TOK_SEMICOLON
   70               | TOK_CONT TOK_SEMICOLON
   71               | TOK_RETURN TOK_SEMICOLON
   72               | TOK_RETURN FUNCTION TOK_SEMICOLON
   73               | TOK_RETURN LOGIC_EXPR TOK_SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOK_BIT_AND (258) 29
    TOK_BIT_OR (259) 30
    TOK_EQ (260) 32
    TOK_NEQ (261) 33
    TOK_GE (262) 36
    TOK_LE (263) 35
    TOK_G (264) 37
    TOK_L (265) 38
    TOK_IF (266) 66 67
    TOK_WHILE (267) 68
    TOK_ELSE (268) 67
    TOK_RETURN (269) 71 72 73
    TOK_BREAK (270) 69
    TOK_CONT (271) 70
    TOK_MUL (272) 43
    TOK_DIVIDE (273) 44
    TOK_PLUS (274) 40
    TOK_MINUS (275) 41 47
    TOK_MOD (276) 45
    TOK_LBRACKET (277) 6 7 50 51 52 66 67 68
    TOK_RBRACKET (278) 6 7 50 51 52 66 67 68
    TOK_SEMICOLON (279) 10 11 12 13 60 61 69 70 71 72 73
    TOK_LCBRACKET (280) 12 13 62 63 64 65
    TOK_RCBRACKET (281) 12 13 62 63 64 65
    TOK_LSQBRACKET (282) 19 20
    TOK_RSQBRACKET (283) 19 20
    TOK_COMMA (284) 15 17
    TOK_N <number> (285) 48
    TOK_VAR <string> (286) 18 19 20 22 23 24 25 26 27 49 51 52
    VARTYPE_INT <string> (287) 6 7 10 11 12 13 14
    TOK_SUBASSIGN (288) 24
    TOK_MULASSIGN (289) 25
    TOK_DIVASSIGN (290) 26
    TOK_ADDASSIGN (291) 23
    TOK_EQASSIGN (292) 11 12 13 22
    TOK_MODASSIGN (293) 27


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    ROOT <expr> (40)
        on left: 1
        on right: 0
    EXPR_TREE <expr> (41)
        on left: 2 3
        on right: 1 3
    EXPR <expr> (42)
        on left: 4 5
        on right: 2 3 68
    FUNCTION <expr> (43)
        on left: 6 7
        on right: 4 72
    REC_DECLARATION <expr> (44)
        on left: 8 9
        on right: 9 64 65
    DECLARATION <expr> (45)
        on left: 10 11 12 13
        on right: 5 8 9
    FUNC_ARGS <expr> (46)
        on left: 14 15
        on right: 6 15
    FUNC_CALL_ARGS <expr> (47)
        on left: 16 17
        on right: 13 17 52
    DECLARATOR <expr> (48)
        on left: 18 19 20
        on right: 6 7 10 11 12 13 14
    ASSIGN_EXPR <expr> (49)
        on left: 21 22 23 24 25 26 27
        on right: 11 16 17 22 23 24 25 26 27 50 61
    LOGIC_EXPR <expr> (50)
        on left: 28 29 30
        on right: 19 21 29 30 66 67 73
    EQ_EXPR <expr> (51)
        on left: 31 32 33
        on right: 28 29 30 32 33
    REL_EXPR <expr> (52)
        on left: 34 35 36 37 38
        on right: 31 35 36 37 38
    ADD_EXPR <expr> (53)
        on left: 39 40 41
        on right: 32 33 34 35 36 37 38 40 41
    MULT_EXPR <expr> (54)
        on left: 42 43 44 45
        on right: 39 40 41 43 44 45
    UNARY <expr> (55)
        on left: 46 47
        on right: 42 43 44 45 47
    FACTOR <expr> (56)
        on left: 48 49 50 51 52
        on right: 46
    REC_STATEMENT <expr> (57)
        on left: 53 54
        on right: 54 63 65
    STATEMENT <expr> (58)
        on left: 55 56 57 58 59
        on right: 53 54 66 67 68
    EXPR_STATEMENT <expr> (59)
        on left: 60 61
        on right: 55
    FUNC_STATEMENT <expr> (60)
        on left: 62 63 64 65
        on right: 6 7 59
    SELECT_STATEMENT <expr> (61)
        on left: 66 67
        on right: 58
    ITER_STATEMENT <expr> (62)
        on left: 68
        on right: 56
    JUMP_STATEMENT <expr> (63)
        on left: 69 70 71 72 73
        on right: 57


State 0

    0 $accept: . ROOT $end

    VARTYPE_INT  shift, and go to state 1

    ROOT         go to state 2
    EXPR_TREE    go to state 3
    EXPR         go to state 4
    FUNCTION     go to state 5
    DECLARATION  go to state 6


State 1

    6 FUNCTION: VARTYPE_INT . DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT . DECLARATOR TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT
   10 DECLARATION: VARTYPE_INT . DECLARATOR TOK_SEMICOLON
   11            | VARTYPE_INT . DECLARATOR TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON
   12            | VARTYPE_INT . DECLARATOR TOK_EQASSIGN TOK_LCBRACKET TOK_RCBRACKET TOK_SEMICOLON
   13            | VARTYPE_INT . DECLARATOR TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON

    TOK_VAR  shift, and go to state 7

    DECLARATOR  go to state 8


State 2

    0 $accept: ROOT . $end

    $end  shift, and go to state 9


State 3

    1 ROOT: EXPR_TREE .
    3 EXPR_TREE: EXPR_TREE . EXPR

    VARTYPE_INT  shift, and go to state 1

    $default  reduce using rule 1 (ROOT)

    EXPR         go to state 10
    FUNCTION     go to state 5
    DECLARATION  go to state 6


State 4

    2 EXPR_TREE: EXPR .

    $default  reduce using rule 2 (EXPR_TREE)


State 5

    4 EXPR: FUNCTION .

    $default  reduce using rule 4 (EXPR)


State 6

    5 EXPR: DECLARATION .

    $default  reduce using rule 5 (EXPR)


State 7

   18 DECLARATOR: TOK_VAR .
   19           | TOK_VAR . TOK_LSQBRACKET LOGIC_EXPR TOK_RSQBRACKET
   20           | TOK_VAR . TOK_LSQBRACKET TOK_RSQBRACKET

    TOK_LSQBRACKET  shift, and go to state 11

    $default  reduce using rule 18 (DECLARATOR)


State 8

    6 FUNCTION: VARTYPE_INT DECLARATOR . TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT DECLARATOR . TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT
   10 DECLARATION: VARTYPE_INT DECLARATOR . TOK_SEMICOLON
   11            | VARTYPE_INT DECLARATOR . TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON
   12            | VARTYPE_INT DECLARATOR . TOK_EQASSIGN TOK_LCBRACKET TOK_RCBRACKET TOK_SEMICOLON
   13            | VARTYPE_INT DECLARATOR . TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON

    TOK_LBRACKET   shift, and go to state 12
    TOK_SEMICOLON  shift, and go to state 13
    TOK_EQASSIGN   shift, and go to state 14


State 9

    0 $accept: ROOT $end .

    $default  accept


State 10

    3 EXPR_TREE: EXPR_TREE EXPR .

    $default  reduce using rule 3 (EXPR_TREE)


State 11

   19 DECLARATOR: TOK_VAR TOK_LSQBRACKET . LOGIC_EXPR TOK_RSQBRACKET
   20           | TOK_VAR TOK_LSQBRACKET . TOK_RSQBRACKET

    TOK_MINUS       shift, and go to state 15
    TOK_LBRACKET    shift, and go to state 16
    TOK_RSQBRACKET  shift, and go to state 17
    TOK_N           shift, and go to state 18
    TOK_VAR         shift, and go to state 19

    LOGIC_EXPR  go to state 20
    EQ_EXPR     go to state 21
    REL_EXPR    go to state 22
    ADD_EXPR    go to state 23
    MULT_EXPR   go to state 24
    UNARY       go to state 25
    FACTOR      go to state 26


State 12

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET . FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT DECLARATOR TOK_LBRACKET . TOK_RBRACKET FUNC_STATEMENT

    TOK_RBRACKET  shift, and go to state 27
    VARTYPE_INT   shift, and go to state 28

    FUNC_ARGS  go to state 29


State 13

   10 DECLARATION: VARTYPE_INT DECLARATOR TOK_SEMICOLON .

    $default  reduce using rule 10 (DECLARATION)


State 14

   11 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN . ASSIGN_EXPR TOK_SEMICOLON
   12            | VARTYPE_INT DECLARATOR TOK_EQASSIGN . TOK_LCBRACKET TOK_RCBRACKET TOK_SEMICOLON
   13            | VARTYPE_INT DECLARATOR TOK_EQASSIGN . TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON

    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_LCBRACKET  shift, and go to state 30
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 31

    ASSIGN_EXPR  go to state 32
    LOGIC_EXPR   go to state 33
    EQ_EXPR      go to state 21
    REL_EXPR     go to state 22
    ADD_EXPR     go to state 23
    MULT_EXPR    go to state 24
    UNARY        go to state 25
    FACTOR       go to state 26


State 15

   47 UNARY: TOK_MINUS . UNARY

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    UNARY   go to state 34
    FACTOR  go to state 26


State 16

   50 FACTOR: TOK_LBRACKET . ASSIGN_EXPR TOK_RBRACKET

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 31

    ASSIGN_EXPR  go to state 35
    LOGIC_EXPR   go to state 33
    EQ_EXPR      go to state 21
    REL_EXPR     go to state 22
    ADD_EXPR     go to state 23
    MULT_EXPR    go to state 24
    UNARY        go to state 25
    FACTOR       go to state 26


State 17

   20 DECLARATOR: TOK_VAR TOK_LSQBRACKET TOK_RSQBRACKET .

    $default  reduce using rule 20 (DECLARATOR)


State 18

   48 FACTOR: TOK_N .

    $default  reduce using rule 48 (FACTOR)


State 19

   49 FACTOR: TOK_VAR .
   51       | TOK_VAR . TOK_LBRACKET TOK_RBRACKET
   52       | TOK_VAR . TOK_LBRACKET FUNC_CALL_ARGS TOK_RBRACKET

    TOK_LBRACKET  shift, and go to state 36

    $default  reduce using rule 49 (FACTOR)


State 20

   19 DECLARATOR: TOK_VAR TOK_LSQBRACKET LOGIC_EXPR . TOK_RSQBRACKET
   29 LOGIC_EXPR: LOGIC_EXPR . TOK_BIT_AND EQ_EXPR
   30           | LOGIC_EXPR . TOK_BIT_OR EQ_EXPR

    TOK_BIT_AND     shift, and go to state 37
    TOK_BIT_OR      shift, and go to state 38
    TOK_RSQBRACKET  shift, and go to state 39


State 21

   28 LOGIC_EXPR: EQ_EXPR .
   32 EQ_EXPR: EQ_EXPR . TOK_EQ ADD_EXPR
   33        | EQ_EXPR . TOK_NEQ ADD_EXPR

    TOK_EQ   shift, and go to state 40
    TOK_NEQ  shift, and go to state 41

    $default  reduce using rule 28 (LOGIC_EXPR)


State 22

   31 EQ_EXPR: REL_EXPR .
   35 REL_EXPR: REL_EXPR . TOK_LE ADD_EXPR
   36         | REL_EXPR . TOK_GE ADD_EXPR
   37         | REL_EXPR . TOK_G ADD_EXPR
   38         | REL_EXPR . TOK_L ADD_EXPR

    TOK_GE  shift, and go to state 42
    TOK_LE  shift, and go to state 43
    TOK_G   shift, and go to state 44
    TOK_L   shift, and go to state 45

    $default  reduce using rule 31 (EQ_EXPR)


State 23

   34 REL_EXPR: ADD_EXPR .
   40 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   41         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 46
    TOK_MINUS  shift, and go to state 47

    $default  reduce using rule 34 (REL_EXPR)


State 24

   39 ADD_EXPR: MULT_EXPR .
   43 MULT_EXPR: MULT_EXPR . TOK_MUL UNARY
   44          | MULT_EXPR . TOK_DIVIDE UNARY
   45          | MULT_EXPR . TOK_MOD UNARY

    TOK_MUL     shift, and go to state 48
    TOK_DIVIDE  shift, and go to state 49
    TOK_MOD     shift, and go to state 50

    $default  reduce using rule 39 (ADD_EXPR)


State 25

   42 MULT_EXPR: UNARY .

    $default  reduce using rule 42 (MULT_EXPR)


State 26

   46 UNARY: FACTOR .

    $default  reduce using rule 46 (UNARY)


State 27

    7 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET TOK_RBRACKET . FUNC_STATEMENT

    TOK_LCBRACKET  shift, and go to state 51

    FUNC_STATEMENT  go to state 52


State 28

   14 FUNC_ARGS: VARTYPE_INT . DECLARATOR

    TOK_VAR  shift, and go to state 7

    DECLARATOR  go to state 53


State 29

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS . TOK_RBRACKET FUNC_STATEMENT
   15 FUNC_ARGS: FUNC_ARGS . TOK_COMMA FUNC_ARGS

    TOK_RBRACKET  shift, and go to state 54
    TOK_COMMA     shift, and go to state 55


State 30

   12 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN TOK_LCBRACKET . TOK_RCBRACKET TOK_SEMICOLON
   13            | VARTYPE_INT DECLARATOR TOK_EQASSIGN TOK_LCBRACKET . FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON

    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_RCBRACKET  shift, and go to state 56
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 31

    FUNC_CALL_ARGS  go to state 57
    ASSIGN_EXPR     go to state 58
    LOGIC_EXPR      go to state 33
    EQ_EXPR         go to state 21
    REL_EXPR        go to state 22
    ADD_EXPR        go to state 23
    MULT_EXPR       go to state 24
    UNARY           go to state 25
    FACTOR          go to state 26


State 31

   22 ASSIGN_EXPR: TOK_VAR . TOK_EQASSIGN ASSIGN_EXPR
   23            | TOK_VAR . TOK_ADDASSIGN ASSIGN_EXPR
   24            | TOK_VAR . TOK_SUBASSIGN ASSIGN_EXPR
   25            | TOK_VAR . TOK_MULASSIGN ASSIGN_EXPR
   26            | TOK_VAR . TOK_DIVASSIGN ASSIGN_EXPR
   27            | TOK_VAR . TOK_MODASSIGN ASSIGN_EXPR
   49 FACTOR: TOK_VAR .
   51       | TOK_VAR . TOK_LBRACKET TOK_RBRACKET
   52       | TOK_VAR . TOK_LBRACKET FUNC_CALL_ARGS TOK_RBRACKET

    TOK_LBRACKET   shift, and go to state 36
    TOK_SUBASSIGN  shift, and go to state 59
    TOK_MULASSIGN  shift, and go to state 60
    TOK_DIVASSIGN  shift, and go to state 61
    TOK_ADDASSIGN  shift, and go to state 62
    TOK_EQASSIGN   shift, and go to state 63
    TOK_MODASSIGN  shift, and go to state 64

    $default  reduce using rule 49 (FACTOR)


State 32

   11 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN ASSIGN_EXPR . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 65


State 33

   21 ASSIGN_EXPR: LOGIC_EXPR .
   29 LOGIC_EXPR: LOGIC_EXPR . TOK_BIT_AND EQ_EXPR
   30           | LOGIC_EXPR . TOK_BIT_OR EQ_EXPR

    TOK_BIT_AND  shift, and go to state 37
    TOK_BIT_OR   shift, and go to state 38

    $default  reduce using rule 21 (ASSIGN_EXPR)


State 34

   47 UNARY: TOK_MINUS UNARY .

    $default  reduce using rule 47 (UNARY)


State 35

   50 FACTOR: TOK_LBRACKET ASSIGN_EXPR . TOK_RBRACKET

    TOK_RBRACKET  shift, and go to state 66


State 36

   51 FACTOR: TOK_VAR TOK_LBRACKET . TOK_RBRACKET
   52       | TOK_VAR TOK_LBRACKET . FUNC_CALL_ARGS TOK_RBRACKET

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_RBRACKET  shift, and go to state 67
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 31

    FUNC_CALL_ARGS  go to state 68
    ASSIGN_EXPR     go to state 58
    LOGIC_EXPR      go to state 33
    EQ_EXPR         go to state 21
    REL_EXPR        go to state 22
    ADD_EXPR        go to state 23
    MULT_EXPR       go to state 24
    UNARY           go to state 25
    FACTOR          go to state 26


State 37

   29 LOGIC_EXPR: LOGIC_EXPR TOK_BIT_AND . EQ_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    EQ_EXPR    go to state 69
    REL_EXPR   go to state 22
    ADD_EXPR   go to state 23
    MULT_EXPR  go to state 24
    UNARY      go to state 25
    FACTOR     go to state 26


State 38

   30 LOGIC_EXPR: LOGIC_EXPR TOK_BIT_OR . EQ_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    EQ_EXPR    go to state 70
    REL_EXPR   go to state 22
    ADD_EXPR   go to state 23
    MULT_EXPR  go to state 24
    UNARY      go to state 25
    FACTOR     go to state 26


State 39

   19 DECLARATOR: TOK_VAR TOK_LSQBRACKET LOGIC_EXPR TOK_RSQBRACKET .

    $default  reduce using rule 19 (DECLARATOR)


State 40

   32 EQ_EXPR: EQ_EXPR TOK_EQ . ADD_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ADD_EXPR   go to state 71
    MULT_EXPR  go to state 24
    UNARY      go to state 25
    FACTOR     go to state 26


State 41

   33 EQ_EXPR: EQ_EXPR TOK_NEQ . ADD_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ADD_EXPR   go to state 72
    MULT_EXPR  go to state 24
    UNARY      go to state 25
    FACTOR     go to state 26


State 42

   36 REL_EXPR: REL_EXPR TOK_GE . ADD_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ADD_EXPR   go to state 73
    MULT_EXPR  go to state 24
    UNARY      go to state 25
    FACTOR     go to state 26


State 43

   35 REL_EXPR: REL_EXPR TOK_LE . ADD_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ADD_EXPR   go to state 74
    MULT_EXPR  go to state 24
    UNARY      go to state 25
    FACTOR     go to state 26


State 44

   37 REL_EXPR: REL_EXPR TOK_G . ADD_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ADD_EXPR   go to state 75
    MULT_EXPR  go to state 24
    UNARY      go to state 25
    FACTOR     go to state 26


State 45

   38 REL_EXPR: REL_EXPR TOK_L . ADD_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    ADD_EXPR   go to state 76
    MULT_EXPR  go to state 24
    UNARY      go to state 25
    FACTOR     go to state 26


State 46

   40 ADD_EXPR: ADD_EXPR TOK_PLUS . MULT_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    MULT_EXPR  go to state 77
    UNARY      go to state 25
    FACTOR     go to state 26


State 47

   41 ADD_EXPR: ADD_EXPR TOK_MINUS . MULT_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    MULT_EXPR  go to state 78
    UNARY      go to state 25
    FACTOR     go to state 26


State 48

   43 MULT_EXPR: MULT_EXPR TOK_MUL . UNARY

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    UNARY   go to state 79
    FACTOR  go to state 26


State 49

   44 MULT_EXPR: MULT_EXPR TOK_DIVIDE . UNARY

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    UNARY   go to state 80
    FACTOR  go to state 26


State 50

   45 MULT_EXPR: MULT_EXPR TOK_MOD . UNARY

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    UNARY   go to state 81
    FACTOR  go to state 26


State 51

   62 FUNC_STATEMENT: TOK_LCBRACKET . TOK_RCBRACKET
   63               | TOK_LCBRACKET . REC_STATEMENT TOK_RCBRACKET
   64               | TOK_LCBRACKET . REC_DECLARATION TOK_RCBRACKET
   65               | TOK_LCBRACKET . REC_DECLARATION REC_STATEMENT TOK_RCBRACKET

    TOK_IF         shift, and go to state 82
    TOK_WHILE      shift, and go to state 83
    TOK_RETURN     shift, and go to state 84
    TOK_BREAK      shift, and go to state 85
    TOK_CONT       shift, and go to state 86
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 87
    TOK_LCBRACKET  shift, and go to state 51
    TOK_RCBRACKET  shift, and go to state 88
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 31
    VARTYPE_INT    shift, and go to state 89

    REC_DECLARATION   go to state 90
    DECLARATION       go to state 91
    ASSIGN_EXPR       go to state 92
    LOGIC_EXPR        go to state 33
    EQ_EXPR           go to state 21
    REL_EXPR          go to state 22
    ADD_EXPR          go to state 23
    MULT_EXPR         go to state 24
    UNARY             go to state 25
    FACTOR            go to state 26
    REC_STATEMENT     go to state 93
    STATEMENT         go to state 94
    EXPR_STATEMENT    go to state 95
    FUNC_STATEMENT    go to state 96
    SELECT_STATEMENT  go to state 97
    ITER_STATEMENT    go to state 98
    JUMP_STATEMENT    go to state 99


State 52

    7 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT .

    $default  reduce using rule 7 (FUNCTION)


State 53

   14 FUNC_ARGS: VARTYPE_INT DECLARATOR .

    $default  reduce using rule 14 (FUNC_ARGS)


State 54

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET . FUNC_STATEMENT

    TOK_LCBRACKET  shift, and go to state 51

    FUNC_STATEMENT  go to state 100


State 55

   15 FUNC_ARGS: FUNC_ARGS TOK_COMMA . FUNC_ARGS

    VARTYPE_INT  shift, and go to state 28

    FUNC_ARGS  go to state 101


State 56

   12 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN TOK_LCBRACKET TOK_RCBRACKET . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 102


State 57

   13 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS . TOK_RCBRACKET TOK_SEMICOLON
   17 FUNC_CALL_ARGS: FUNC_CALL_ARGS . TOK_COMMA ASSIGN_EXPR

    TOK_RCBRACKET  shift, and go to state 103
    TOK_COMMA      shift, and go to state 104


State 58

   16 FUNC_CALL_ARGS: ASSIGN_EXPR .

    $default  reduce using rule 16 (FUNC_CALL_ARGS)


State 59

   24 ASSIGN_EXPR: TOK_VAR TOK_SUBASSIGN . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 31

    ASSIGN_EXPR  go to state 105
    LOGIC_EXPR   go to state 33
    EQ_EXPR      go to state 21
    REL_EXPR     go to state 22
    ADD_EXPR     go to state 23
    MULT_EXPR    go to state 24
    UNARY        go to state 25
    FACTOR       go to state 26


State 60

   25 ASSIGN_EXPR: TOK_VAR TOK_MULASSIGN . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 31

    ASSIGN_EXPR  go to state 106
    LOGIC_EXPR   go to state 33
    EQ_EXPR      go to state 21
    REL_EXPR     go to state 22
    ADD_EXPR     go to state 23
    MULT_EXPR    go to state 24
    UNARY        go to state 25
    FACTOR       go to state 26


State 61

   26 ASSIGN_EXPR: TOK_VAR TOK_DIVASSIGN . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 31

    ASSIGN_EXPR  go to state 107
    LOGIC_EXPR   go to state 33
    EQ_EXPR      go to state 21
    REL_EXPR     go to state 22
    ADD_EXPR     go to state 23
    MULT_EXPR    go to state 24
    UNARY        go to state 25
    FACTOR       go to state 26


State 62

   23 ASSIGN_EXPR: TOK_VAR TOK_ADDASSIGN . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 31

    ASSIGN_EXPR  go to state 108
    LOGIC_EXPR   go to state 33
    EQ_EXPR      go to state 21
    REL_EXPR     go to state 22
    ADD_EXPR     go to state 23
    MULT_EXPR    go to state 24
    UNARY        go to state 25
    FACTOR       go to state 26


State 63

   22 ASSIGN_EXPR: TOK_VAR TOK_EQASSIGN . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 31

    ASSIGN_EXPR  go to state 109
    LOGIC_EXPR   go to state 33
    EQ_EXPR      go to state 21
    REL_EXPR     go to state 22
    ADD_EXPR     go to state 23
    MULT_EXPR    go to state 24
    UNARY        go to state 25
    FACTOR       go to state 26


State 64

   27 ASSIGN_EXPR: TOK_VAR TOK_MODASSIGN . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 31

    ASSIGN_EXPR  go to state 110
    LOGIC_EXPR   go to state 33
    EQ_EXPR      go to state 21
    REL_EXPR     go to state 22
    ADD_EXPR     go to state 23
    MULT_EXPR    go to state 24
    UNARY        go to state 25
    FACTOR       go to state 26


State 65

   11 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON .

    $default  reduce using rule 11 (DECLARATION)


State 66

   50 FACTOR: TOK_LBRACKET ASSIGN_EXPR TOK_RBRACKET .

    $default  reduce using rule 50 (FACTOR)


State 67

   51 FACTOR: TOK_VAR TOK_LBRACKET TOK_RBRACKET .

    $default  reduce using rule 51 (FACTOR)


State 68

   17 FUNC_CALL_ARGS: FUNC_CALL_ARGS . TOK_COMMA ASSIGN_EXPR
   52 FACTOR: TOK_VAR TOK_LBRACKET FUNC_CALL_ARGS . TOK_RBRACKET

    TOK_RBRACKET  shift, and go to state 111
    TOK_COMMA     shift, and go to state 104


State 69

   29 LOGIC_EXPR: LOGIC_EXPR TOK_BIT_AND EQ_EXPR .
   32 EQ_EXPR: EQ_EXPR . TOK_EQ ADD_EXPR
   33        | EQ_EXPR . TOK_NEQ ADD_EXPR

    TOK_EQ   shift, and go to state 40
    TOK_NEQ  shift, and go to state 41

    $default  reduce using rule 29 (LOGIC_EXPR)


State 70

   30 LOGIC_EXPR: LOGIC_EXPR TOK_BIT_OR EQ_EXPR .
   32 EQ_EXPR: EQ_EXPR . TOK_EQ ADD_EXPR
   33        | EQ_EXPR . TOK_NEQ ADD_EXPR

    TOK_EQ   shift, and go to state 40
    TOK_NEQ  shift, and go to state 41

    $default  reduce using rule 30 (LOGIC_EXPR)


State 71

   32 EQ_EXPR: EQ_EXPR TOK_EQ ADD_EXPR .
   40 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   41         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 46
    TOK_MINUS  shift, and go to state 47

    $default  reduce using rule 32 (EQ_EXPR)


State 72

   33 EQ_EXPR: EQ_EXPR TOK_NEQ ADD_EXPR .
   40 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   41         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 46
    TOK_MINUS  shift, and go to state 47

    $default  reduce using rule 33 (EQ_EXPR)


State 73

   36 REL_EXPR: REL_EXPR TOK_GE ADD_EXPR .
   40 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   41         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 46
    TOK_MINUS  shift, and go to state 47

    $default  reduce using rule 36 (REL_EXPR)


State 74

   35 REL_EXPR: REL_EXPR TOK_LE ADD_EXPR .
   40 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   41         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 46
    TOK_MINUS  shift, and go to state 47

    $default  reduce using rule 35 (REL_EXPR)


State 75

   37 REL_EXPR: REL_EXPR TOK_G ADD_EXPR .
   40 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   41         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 46
    TOK_MINUS  shift, and go to state 47

    $default  reduce using rule 37 (REL_EXPR)


State 76

   38 REL_EXPR: REL_EXPR TOK_L ADD_EXPR .
   40 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   41         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 46
    TOK_MINUS  shift, and go to state 47

    $default  reduce using rule 38 (REL_EXPR)


State 77

   40 ADD_EXPR: ADD_EXPR TOK_PLUS MULT_EXPR .
   43 MULT_EXPR: MULT_EXPR . TOK_MUL UNARY
   44          | MULT_EXPR . TOK_DIVIDE UNARY
   45          | MULT_EXPR . TOK_MOD UNARY

    TOK_MUL     shift, and go to state 48
    TOK_DIVIDE  shift, and go to state 49
    TOK_MOD     shift, and go to state 50

    $default  reduce using rule 40 (ADD_EXPR)


State 78

   41 ADD_EXPR: ADD_EXPR TOK_MINUS MULT_EXPR .
   43 MULT_EXPR: MULT_EXPR . TOK_MUL UNARY
   44          | MULT_EXPR . TOK_DIVIDE UNARY
   45          | MULT_EXPR . TOK_MOD UNARY

    TOK_MUL     shift, and go to state 48
    TOK_DIVIDE  shift, and go to state 49
    TOK_MOD     shift, and go to state 50

    $default  reduce using rule 41 (ADD_EXPR)


State 79

   43 MULT_EXPR: MULT_EXPR TOK_MUL UNARY .

    $default  reduce using rule 43 (MULT_EXPR)


State 80

   44 MULT_EXPR: MULT_EXPR TOK_DIVIDE UNARY .

    $default  reduce using rule 44 (MULT_EXPR)


State 81

   45 MULT_EXPR: MULT_EXPR TOK_MOD UNARY .

    $default  reduce using rule 45 (MULT_EXPR)


State 82

   66 SELECT_STATEMENT: TOK_IF . TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT
   67                 | TOK_IF . TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT

    TOK_LBRACKET  shift, and go to state 112


State 83

   68 ITER_STATEMENT: TOK_WHILE . TOK_LBRACKET EXPR TOK_RBRACKET STATEMENT

    TOK_LBRACKET  shift, and go to state 113


State 84

   71 JUMP_STATEMENT: TOK_RETURN . TOK_SEMICOLON
   72               | TOK_RETURN . FUNCTION TOK_SEMICOLON
   73               | TOK_RETURN . LOGIC_EXPR TOK_SEMICOLON

    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 114
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 19
    VARTYPE_INT    shift, and go to state 115

    FUNCTION    go to state 116
    LOGIC_EXPR  go to state 117
    EQ_EXPR     go to state 21
    REL_EXPR    go to state 22
    ADD_EXPR    go to state 23
    MULT_EXPR   go to state 24
    UNARY       go to state 25
    FACTOR      go to state 26


State 85

   69 JUMP_STATEMENT: TOK_BREAK . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 118


State 86

   70 JUMP_STATEMENT: TOK_CONT . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 119


State 87

   60 EXPR_STATEMENT: TOK_SEMICOLON .

    $default  reduce using rule 60 (EXPR_STATEMENT)


State 88

   62 FUNC_STATEMENT: TOK_LCBRACKET TOK_RCBRACKET .

    $default  reduce using rule 62 (FUNC_STATEMENT)


State 89

   10 DECLARATION: VARTYPE_INT . DECLARATOR TOK_SEMICOLON
   11            | VARTYPE_INT . DECLARATOR TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON
   12            | VARTYPE_INT . DECLARATOR TOK_EQASSIGN TOK_LCBRACKET TOK_RCBRACKET TOK_SEMICOLON
   13            | VARTYPE_INT . DECLARATOR TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON

    TOK_VAR  shift, and go to state 7

    DECLARATOR  go to state 120


State 90

    9 REC_DECLARATION: REC_DECLARATION . DECLARATION
   64 FUNC_STATEMENT: TOK_LCBRACKET REC_DECLARATION . TOK_RCBRACKET
   65               | TOK_LCBRACKET REC_DECLARATION . REC_STATEMENT TOK_RCBRACKET

    TOK_IF         shift, and go to state 82
    TOK_WHILE      shift, and go to state 83
    TOK_RETURN     shift, and go to state 84
    TOK_BREAK      shift, and go to state 85
    TOK_CONT       shift, and go to state 86
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 87
    TOK_LCBRACKET  shift, and go to state 51
    TOK_RCBRACKET  shift, and go to state 121
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 31
    VARTYPE_INT    shift, and go to state 89

    DECLARATION       go to state 122
    ASSIGN_EXPR       go to state 92
    LOGIC_EXPR        go to state 33
    EQ_EXPR           go to state 21
    REL_EXPR          go to state 22
    ADD_EXPR          go to state 23
    MULT_EXPR         go to state 24
    UNARY             go to state 25
    FACTOR            go to state 26
    REC_STATEMENT     go to state 123
    STATEMENT         go to state 94
    EXPR_STATEMENT    go to state 95
    FUNC_STATEMENT    go to state 96
    SELECT_STATEMENT  go to state 97
    ITER_STATEMENT    go to state 98
    JUMP_STATEMENT    go to state 99


State 91

    8 REC_DECLARATION: DECLARATION .

    $default  reduce using rule 8 (REC_DECLARATION)


State 92

   61 EXPR_STATEMENT: ASSIGN_EXPR . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 124


State 93

   54 REC_STATEMENT: REC_STATEMENT . STATEMENT
   63 FUNC_STATEMENT: TOK_LCBRACKET REC_STATEMENT . TOK_RCBRACKET

    TOK_IF         shift, and go to state 82
    TOK_WHILE      shift, and go to state 83
    TOK_RETURN     shift, and go to state 84
    TOK_BREAK      shift, and go to state 85
    TOK_CONT       shift, and go to state 86
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 87
    TOK_LCBRACKET  shift, and go to state 51
    TOK_RCBRACKET  shift, and go to state 125
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 31

    ASSIGN_EXPR       go to state 92
    LOGIC_EXPR        go to state 33
    EQ_EXPR           go to state 21
    REL_EXPR          go to state 22
    ADD_EXPR          go to state 23
    MULT_EXPR         go to state 24
    UNARY             go to state 25
    FACTOR            go to state 26
    STATEMENT         go to state 126
    EXPR_STATEMENT    go to state 95
    FUNC_STATEMENT    go to state 96
    SELECT_STATEMENT  go to state 97
    ITER_STATEMENT    go to state 98
    JUMP_STATEMENT    go to state 99


State 94

   53 REC_STATEMENT: STATEMENT .

    $default  reduce using rule 53 (REC_STATEMENT)


State 95

   55 STATEMENT: EXPR_STATEMENT .

    $default  reduce using rule 55 (STATEMENT)


State 96

   59 STATEMENT: FUNC_STATEMENT .

    $default  reduce using rule 59 (STATEMENT)


State 97

   58 STATEMENT: SELECT_STATEMENT .

    $default  reduce using rule 58 (STATEMENT)


State 98

   56 STATEMENT: ITER_STATEMENT .

    $default  reduce using rule 56 (STATEMENT)


State 99

   57 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 57 (STATEMENT)


State 100

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT .

    $default  reduce using rule 6 (FUNCTION)


State 101

   15 FUNC_ARGS: FUNC_ARGS . TOK_COMMA FUNC_ARGS
   15          | FUNC_ARGS TOK_COMMA FUNC_ARGS .

    TOK_COMMA  shift, and go to state 55

    TOK_COMMA  [reduce using rule 15 (FUNC_ARGS)]
    $default   reduce using rule 15 (FUNC_ARGS)


State 102

   12 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN TOK_LCBRACKET TOK_RCBRACKET TOK_SEMICOLON .

    $default  reduce using rule 12 (DECLARATION)


State 103

   13 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 127


State 104

   17 FUNC_CALL_ARGS: FUNC_CALL_ARGS TOK_COMMA . ASSIGN_EXPR

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 31

    ASSIGN_EXPR  go to state 128
    LOGIC_EXPR   go to state 33
    EQ_EXPR      go to state 21
    REL_EXPR     go to state 22
    ADD_EXPR     go to state 23
    MULT_EXPR    go to state 24
    UNARY        go to state 25
    FACTOR       go to state 26


State 105

   24 ASSIGN_EXPR: TOK_VAR TOK_SUBASSIGN ASSIGN_EXPR .

    $default  reduce using rule 24 (ASSIGN_EXPR)


State 106

   25 ASSIGN_EXPR: TOK_VAR TOK_MULASSIGN ASSIGN_EXPR .

    $default  reduce using rule 25 (ASSIGN_EXPR)


State 107

   26 ASSIGN_EXPR: TOK_VAR TOK_DIVASSIGN ASSIGN_EXPR .

    $default  reduce using rule 26 (ASSIGN_EXPR)


State 108

   23 ASSIGN_EXPR: TOK_VAR TOK_ADDASSIGN ASSIGN_EXPR .

    $default  reduce using rule 23 (ASSIGN_EXPR)


State 109

   22 ASSIGN_EXPR: TOK_VAR TOK_EQASSIGN ASSIGN_EXPR .

    $default  reduce using rule 22 (ASSIGN_EXPR)


State 110

   27 ASSIGN_EXPR: TOK_VAR TOK_MODASSIGN ASSIGN_EXPR .

    $default  reduce using rule 27 (ASSIGN_EXPR)


State 111

   52 FACTOR: TOK_VAR TOK_LBRACKET FUNC_CALL_ARGS TOK_RBRACKET .

    $default  reduce using rule 52 (FACTOR)


State 112

   66 SELECT_STATEMENT: TOK_IF TOK_LBRACKET . LOGIC_EXPR TOK_RBRACKET STATEMENT
   67                 | TOK_IF TOK_LBRACKET . LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT

    TOK_MINUS     shift, and go to state 15
    TOK_LBRACKET  shift, and go to state 16
    TOK_N         shift, and go to state 18
    TOK_VAR       shift, and go to state 19

    LOGIC_EXPR  go to state 129
    EQ_EXPR     go to state 21
    REL_EXPR    go to state 22
    ADD_EXPR    go to state 23
    MULT_EXPR   go to state 24
    UNARY       go to state 25
    FACTOR      go to state 26


State 113

   68 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET . EXPR TOK_RBRACKET STATEMENT

    VARTYPE_INT  shift, and go to state 1

    EXPR         go to state 130
    FUNCTION     go to state 5
    DECLARATION  go to state 6


State 114

   71 JUMP_STATEMENT: TOK_RETURN TOK_SEMICOLON .

    $default  reduce using rule 71 (JUMP_STATEMENT)


State 115

    6 FUNCTION: VARTYPE_INT . DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT . DECLARATOR TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT

    TOK_VAR  shift, and go to state 7

    DECLARATOR  go to state 131


State 116

   72 JUMP_STATEMENT: TOK_RETURN FUNCTION . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 132


State 117

   29 LOGIC_EXPR: LOGIC_EXPR . TOK_BIT_AND EQ_EXPR
   30           | LOGIC_EXPR . TOK_BIT_OR EQ_EXPR
   73 JUMP_STATEMENT: TOK_RETURN LOGIC_EXPR . TOK_SEMICOLON

    TOK_BIT_AND    shift, and go to state 37
    TOK_BIT_OR     shift, and go to state 38
    TOK_SEMICOLON  shift, and go to state 133


State 118

   69 JUMP_STATEMENT: TOK_BREAK TOK_SEMICOLON .

    $default  reduce using rule 69 (JUMP_STATEMENT)


State 119

   70 JUMP_STATEMENT: TOK_CONT TOK_SEMICOLON .

    $default  reduce using rule 70 (JUMP_STATEMENT)


State 120

   10 DECLARATION: VARTYPE_INT DECLARATOR . TOK_SEMICOLON
   11            | VARTYPE_INT DECLARATOR . TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON
   12            | VARTYPE_INT DECLARATOR . TOK_EQASSIGN TOK_LCBRACKET TOK_RCBRACKET TOK_SEMICOLON
   13            | VARTYPE_INT DECLARATOR . TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 13
    TOK_EQASSIGN   shift, and go to state 14


State 121

   64 FUNC_STATEMENT: TOK_LCBRACKET REC_DECLARATION TOK_RCBRACKET .

    $default  reduce using rule 64 (FUNC_STATEMENT)


State 122

    9 REC_DECLARATION: REC_DECLARATION DECLARATION .

    $default  reduce using rule 9 (REC_DECLARATION)


State 123

   54 REC_STATEMENT: REC_STATEMENT . STATEMENT
   65 FUNC_STATEMENT: TOK_LCBRACKET REC_DECLARATION REC_STATEMENT . TOK_RCBRACKET

    TOK_IF         shift, and go to state 82
    TOK_WHILE      shift, and go to state 83
    TOK_RETURN     shift, and go to state 84
    TOK_BREAK      shift, and go to state 85
    TOK_CONT       shift, and go to state 86
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 87
    TOK_LCBRACKET  shift, and go to state 51
    TOK_RCBRACKET  shift, and go to state 134
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 31

    ASSIGN_EXPR       go to state 92
    LOGIC_EXPR        go to state 33
    EQ_EXPR           go to state 21
    REL_EXPR          go to state 22
    ADD_EXPR          go to state 23
    MULT_EXPR         go to state 24
    UNARY             go to state 25
    FACTOR            go to state 26
    STATEMENT         go to state 126
    EXPR_STATEMENT    go to state 95
    FUNC_STATEMENT    go to state 96
    SELECT_STATEMENT  go to state 97
    ITER_STATEMENT    go to state 98
    JUMP_STATEMENT    go to state 99


State 124

   61 EXPR_STATEMENT: ASSIGN_EXPR TOK_SEMICOLON .

    $default  reduce using rule 61 (EXPR_STATEMENT)


State 125

   63 FUNC_STATEMENT: TOK_LCBRACKET REC_STATEMENT TOK_RCBRACKET .

    $default  reduce using rule 63 (FUNC_STATEMENT)


State 126

   54 REC_STATEMENT: REC_STATEMENT STATEMENT .

    $default  reduce using rule 54 (REC_STATEMENT)


State 127

   13 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON .

    $default  reduce using rule 13 (DECLARATION)


State 128

   17 FUNC_CALL_ARGS: FUNC_CALL_ARGS TOK_COMMA ASSIGN_EXPR .

    $default  reduce using rule 17 (FUNC_CALL_ARGS)


State 129

   29 LOGIC_EXPR: LOGIC_EXPR . TOK_BIT_AND EQ_EXPR
   30           | LOGIC_EXPR . TOK_BIT_OR EQ_EXPR
   66 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR . TOK_RBRACKET STATEMENT
   67                 | TOK_IF TOK_LBRACKET LOGIC_EXPR . TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT

    TOK_BIT_AND   shift, and go to state 37
    TOK_BIT_OR    shift, and go to state 38
    TOK_RBRACKET  shift, and go to state 135


State 130

   68 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET EXPR . TOK_RBRACKET STATEMENT

    TOK_RBRACKET  shift, and go to state 136


State 131

    6 FUNCTION: VARTYPE_INT DECLARATOR . TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT DECLARATOR . TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT

    TOK_LBRACKET  shift, and go to state 12


State 132

   72 JUMP_STATEMENT: TOK_RETURN FUNCTION TOK_SEMICOLON .

    $default  reduce using rule 72 (JUMP_STATEMENT)


State 133

   73 JUMP_STATEMENT: TOK_RETURN LOGIC_EXPR TOK_SEMICOLON .

    $default  reduce using rule 73 (JUMP_STATEMENT)


State 134

   65 FUNC_STATEMENT: TOK_LCBRACKET REC_DECLARATION REC_STATEMENT TOK_RCBRACKET .

    $default  reduce using rule 65 (FUNC_STATEMENT)


State 135

   66 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET . STATEMENT
   67                 | TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET . STATEMENT TOK_ELSE STATEMENT

    TOK_IF         shift, and go to state 82
    TOK_WHILE      shift, and go to state 83
    TOK_RETURN     shift, and go to state 84
    TOK_BREAK      shift, and go to state 85
    TOK_CONT       shift, and go to state 86
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 87
    TOK_LCBRACKET  shift, and go to state 51
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 31

    ASSIGN_EXPR       go to state 92
    LOGIC_EXPR        go to state 33
    EQ_EXPR           go to state 21
    REL_EXPR          go to state 22
    ADD_EXPR          go to state 23
    MULT_EXPR         go to state 24
    UNARY             go to state 25
    FACTOR            go to state 26
    STATEMENT         go to state 137
    EXPR_STATEMENT    go to state 95
    FUNC_STATEMENT    go to state 96
    SELECT_STATEMENT  go to state 97
    ITER_STATEMENT    go to state 98
    JUMP_STATEMENT    go to state 99


State 136

   68 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET EXPR TOK_RBRACKET . STATEMENT

    TOK_IF         shift, and go to state 82
    TOK_WHILE      shift, and go to state 83
    TOK_RETURN     shift, and go to state 84
    TOK_BREAK      shift, and go to state 85
    TOK_CONT       shift, and go to state 86
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 87
    TOK_LCBRACKET  shift, and go to state 51
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 31

    ASSIGN_EXPR       go to state 92
    LOGIC_EXPR        go to state 33
    EQ_EXPR           go to state 21
    REL_EXPR          go to state 22
    ADD_EXPR          go to state 23
    MULT_EXPR         go to state 24
    UNARY             go to state 25
    FACTOR            go to state 26
    STATEMENT         go to state 138
    EXPR_STATEMENT    go to state 95
    FUNC_STATEMENT    go to state 96
    SELECT_STATEMENT  go to state 97
    ITER_STATEMENT    go to state 98
    JUMP_STATEMENT    go to state 99


State 137

   66 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT .
   67                 | TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT . TOK_ELSE STATEMENT

    TOK_ELSE  shift, and go to state 139

    TOK_ELSE  [reduce using rule 66 (SELECT_STATEMENT)]
    $default  reduce using rule 66 (SELECT_STATEMENT)


State 138

   68 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET EXPR TOK_RBRACKET STATEMENT .

    $default  reduce using rule 68 (ITER_STATEMENT)


State 139

   67 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE . STATEMENT

    TOK_IF         shift, and go to state 82
    TOK_WHILE      shift, and go to state 83
    TOK_RETURN     shift, and go to state 84
    TOK_BREAK      shift, and go to state 85
    TOK_CONT       shift, and go to state 86
    TOK_MINUS      shift, and go to state 15
    TOK_LBRACKET   shift, and go to state 16
    TOK_SEMICOLON  shift, and go to state 87
    TOK_LCBRACKET  shift, and go to state 51
    TOK_N          shift, and go to state 18
    TOK_VAR        shift, and go to state 31

    ASSIGN_EXPR       go to state 92
    LOGIC_EXPR        go to state 33
    EQ_EXPR           go to state 21
    REL_EXPR          go to state 22
    ADD_EXPR          go to state 23
    MULT_EXPR         go to state 24
    UNARY             go to state 25
    FACTOR            go to state 26
    STATEMENT         go to state 140
    EXPR_STATEMENT    go to state 95
    FUNC_STATEMENT    go to state 96
    SELECT_STATEMENT  go to state 97
    ITER_STATEMENT    go to state 98
    JUMP_STATEMENT    go to state 99


State 140

   67 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT .

    $default  reduce using rule 67 (SELECT_STATEMENT)
