State 47 conflicts: 2 shift/reduce
State 48 conflicts: 2 shift/reduce
State 49 conflicts: 2 shift/reduce
State 53 conflicts: 2 shift/reduce
State 54 conflicts: 2 shift/reduce
State 197 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: EXPR_TREE

    2 EXPR_TREE: EXPR_SINGLE
    3          | EXPR_TREE EXPR_SINGLE

    4 EXPR_SINGLE: FUNCTION
    5            | DECLARATION

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT DECLARATOR TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT
    8         | VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET TOK_SEMICOLON
    9         | VARTYPE_INT DECLARATOR TOK_LBRACKET TOK_RBRACKET TOK_SEMICOLON

   10 REC_DECLARATION: DECLARATION
   11                | REC_DECLARATION DECLARATION

   12 DECLARATION: VARTYPE_INT DECLARATOR TOK_SEMICOLON
   13            | VARTYPE_INT ARRAY_DECLARATOR TOK_SEMICOLON
   14            | VARTYPE_INT DECLARATOR TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON
   15            | VARTYPE_INT ARRAY_DECLARATOR TOK_EQASSIGN TOK_LCBRACKET TOK_RCBRACKET TOK_SEMICOLON
   16            | VARTYPE_INT ARRAY_DECLARATOR TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON

   17 SINGLE_DECL: VARTYPE_INT DECLARATOR

   18 FUNC_ARGS: ARG_SINGLE
   19          | FUNC_ARGS TOK_COMMA ARG_SINGLE

   20 FUNC_CALL_ARGS: ARG_SINGLE
   21               | FUNC_CALL_ARGS TOK_COMMA ARG_SINGLE

   22 DECLARATOR: TOK_VAR

   23 ARRAY_DECLARATOR: TOK_VAR TOK_LSQBRACKET LOGIC_EXPR TOK_RSQBRACKET
   24                 | TOK_VAR TOK_LSQBRACKET TOK_RSQBRACKET

   25 ARG_SINGLE: SINGLE_DECL
   26           | ASSIGN_EXPR

   27 ASSIGN_EXPR: COND_EXPR
   28            | FACTOR TOK_EQASSIGN ASSIGN_EXPR
   29            | FACTOR TOK_ADDASSIGN ASSIGN_EXPR
   30            | FACTOR TOK_SUBASSIGN ASSIGN_EXPR
   31            | FACTOR TOK_MULASSIGN ASSIGN_EXPR
   32            | FACTOR TOK_DIVASSIGN ASSIGN_EXPR
   33            | FACTOR TOK_MODASSIGN ASSIGN_EXPR
   34            | FACTOR TOK_ANDASSIGN ASSIGN_EXPR
   35            | FACTOR TOK_ORASSIGN ASSIGN_EXPR
   36            | FACTOR TOK_XORASSIGN ASSIGN_EXPR

   37 COND_EXPR: LOGIC_EXPR
   38          | LOGIC_EXPR TOK_QMARK ASSIGN_EXPR TOK_COLON COND_EXPR

   39 LOGIC_EXPR: BIT_EXPR
   40           | LOGIC_EXPR TOK_LOGIC_AND BIT_EXPR
   41           | LOGIC_EXPR TOK_LOGIC_OR BIT_EXPR

   42 BIT_EXPR: EQ_EXPR
   43         | BIT_EXPR TOK_BIT_AND EQ_EXPR
   44         | BIT_EXPR TOK_BIT_OR EQ_EXPR
   45         | BIT_EXPR TOK_BIT_XOR EQ_EXPR

   46 EQ_EXPR: REL_EXPR
   47        | EQ_EXPR TOK_EQ REL_EXPR
   48        | EQ_EXPR TOK_NEQ REL_EXPR

   49 REL_EXPR: SHIFT_EXPR
   50         | REL_EXPR TOK_LE SHIFT_EXPR
   51         | REL_EXPR TOK_GE SHIFT_EXPR
   52         | REL_EXPR TOK_G SHIFT_EXPR
   53         | REL_EXPR TOK_L SHIFT_EXPR

   54 SHIFT_EXPR: ADD_EXPR
   55           | SHIFT_EXPR TOK_LSHIFT ADD_EXPR
   56           | SHIFT_EXPR TOK_RSHIFT ADD_EXPR

   57 ADD_EXPR: MULT_EXPR
   58         | ADD_EXPR TOK_PLUS MULT_EXPR
   59         | ADD_EXPR TOK_MINUS MULT_EXPR

   60 MULT_EXPR: UNARY
   61          | MULT_EXPR TOK_MUL UNARY
   62          | MULT_EXPR TOK_DIVIDE UNARY
   63          | MULT_EXPR TOK_MOD UNARY

   64 UNARY: FACTOR
   65      | TOK_MINUS UNARY
   66      | TOK_LOGIC_NOT UNARY
   67      | TOK_BIT_NOT UNARY
   68      | TOK_INCR UNARY
   69      | TOK_DECR UNARY
   70      | UNARY TOK_INCR
   71      | UNARY TOK_DECR

   72 FACTOR: TOK_N
   73       | TOK_VAR
   74       | TOK_LBRACKET ASSIGN_EXPR TOK_RBRACKET
   75       | TOK_VAR TOK_LBRACKET TOK_RBRACKET
   76       | TOK_VAR TOK_LBRACKET FUNC_CALL_ARGS TOK_RBRACKET
   77       | TOK_VAR TOK_LSQBRACKET ASSIGN_EXPR TOK_RSQBRACKET

   78 REC_STATEMENT: STATEMENT
   79              | REC_STATEMENT STATEMENT

   80 STATEMENT: EXPR_STATEMENT
   81          | ITER_STATEMENT
   82          | JUMP_STATEMENT
   83          | SELECT_STATEMENT
   84          | FUNC_STATEMENT
   85          | SWITCH_STATEMENT

   86 SWITCH_STATEMENT: TOK_CASE COND_EXPR TOK_COLON STATEMENT
   87                 | TOK_DEFAULT TOK_COLON STATEMENT

   88 EXPR_STATEMENT: ASSIGN_EXPR TOK_SEMICOLON

   89 FUNC_STATEMENT: TOK_LCBRACKET TOK_RCBRACKET
   90               | TOK_LCBRACKET REC_STATEMENT TOK_RCBRACKET
   91               | TOK_LCBRACKET REC_DECLARATION TOK_RCBRACKET
   92               | TOK_LCBRACKET REC_DECLARATION REC_STATEMENT TOK_RCBRACKET

   93 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT
   94                 | TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT
   95                 | TOK_SWITCH TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT

   96 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET ASSIGN_EXPR TOK_RBRACKET STATEMENT
   97               | TOK_FOR TOK_LBRACKET EXPR_STATEMENT EXPR_STATEMENT ASSIGN_EXPR TOK_RBRACKET STATEMENT

   98 JUMP_STATEMENT: TOK_BREAK TOK_SEMICOLON
   99               | TOK_CONT TOK_SEMICOLON
  100               | TOK_RETURN TOK_SEMICOLON
  101               | TOK_RETURN FUNCTION TOK_SEMICOLON
  102               | TOK_RETURN LOGIC_EXPR TOK_SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOK_BIT_AND (258) 43
    TOK_BIT_OR (259) 44
    TOK_EQ (260) 47
    TOK_NEQ (261) 48
    TOK_BIT_XOR (262) 45
    TOK_LOGIC_AND (263) 40
    TOK_LOGIC_OR (264) 41
    TOK_LSHIFT (265) 55
    TOK_RSHIFT (266) 56
    TOK_LOGIC_NOT (267) 66
    TOK_BIT_NOT (268) 67
    TOK_GE (269) 51
    TOK_LE (270) 50
    TOK_G (271) 52
    TOK_L (272) 53
    TOK_IF (273) 93 94
    TOK_WHILE (274) 96
    TOK_ELSE (275) 94
    TOK_FOR (276) 97
    TOK_SWITCH (277) 95
    TOK_CASE (278) 86
    TOK_DEFAULT (279) 87
    TOK_RETURN (280) 100 101 102
    TOK_BREAK (281) 98
    TOK_CONT (282) 99
    TOK_MUL (283) 61
    TOK_DIVIDE (284) 62
    TOK_PLUS (285) 58
    TOK_MINUS (286) 59 65
    TOK_MOD (287) 63
    TOK_LBRACKET (288) 6 7 8 9 74 75 76 93 94 95 96 97
    TOK_RBRACKET (289) 6 7 8 9 74 75 76 93 94 95 96 97
    TOK_SEMICOLON (290) 8 9 12 13 14 15 16 88 98 99 100 101 102
    TOK_LCBRACKET (291) 15 16 89 90 91 92
    TOK_RCBRACKET (292) 15 16 89 90 91 92
    TOK_LSQBRACKET (293) 23 24 77
    TOK_RSQBRACKET (294) 23 24 77
    TOK_COMMA (295) 19 21
    TOK_QMARK (296) 38
    TOK_COLON (297) 38 86 87
    TOK_N <number> (298) 72
    TOK_VAR <string> (299) 22 23 24 73 75 76 77
    VARTYPE_INT <string> (300) 6 7 8 9 12 13 14 15 16 17
    TOK_SUBASSIGN (301) 30
    TOK_MULASSIGN (302) 31
    TOK_DIVASSIGN (303) 32
    TOK_ADDASSIGN (304) 29
    TOK_EQASSIGN (305) 14 15 16 28
    TOK_MODASSIGN (306) 33
    TOK_ANDASSIGN (307) 34
    TOK_ORASSIGN (308) 35
    TOK_XORASSIGN (309) 36
    TOK_INCR (310) 68 70
    TOK_DECR (311) 69 71


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    ROOT <expr> (58)
        on left: 1
        on right: 0
    EXPR_TREE <expr> (59)
        on left: 2 3
        on right: 1 3
    EXPR_SINGLE <expr> (60)
        on left: 4 5
        on right: 2 3
    FUNCTION <expr> (61)
        on left: 6 7 8 9
        on right: 4 101
    REC_DECLARATION <expr> (62)
        on left: 10 11
        on right: 11 91 92
    DECLARATION <expr> (63)
        on left: 12 13 14 15 16
        on right: 5 10 11
    SINGLE_DECL <expr> (64)
        on left: 17
        on right: 25
    FUNC_ARGS <expr> (65)
        on left: 18 19
        on right: 6 8 19
    FUNC_CALL_ARGS <expr> (66)
        on left: 20 21
        on right: 16 21 76
    DECLARATOR <expr> (67)
        on left: 22
        on right: 6 7 8 9 12 14 17
    ARRAY_DECLARATOR <expr> (68)
        on left: 23 24
        on right: 13 15 16
    ARG_SINGLE <expr> (69)
        on left: 25 26
        on right: 18 19 20 21
    ASSIGN_EXPR <expr> (70)
        on left: 27 28 29 30 31 32 33 34 35 36
        on right: 14 26 28 29 30 31 32 33 34 35 36 38 74 77 88 96 97
    COND_EXPR <expr> (71)
        on left: 37 38
        on right: 27 38 86
    LOGIC_EXPR <expr> (72)
        on left: 39 40 41
        on right: 23 37 38 40 41 93 94 95 102
    BIT_EXPR <expr> (73)
        on left: 42 43 44 45
        on right: 39 40 41 43 44 45
    EQ_EXPR <expr> (74)
        on left: 46 47 48
        on right: 42 43 44 45 47 48
    REL_EXPR <expr> (75)
        on left: 49 50 51 52 53
        on right: 46 47 48 50 51 52 53
    SHIFT_EXPR <expr> (76)
        on left: 54 55 56
        on right: 49 50 51 52 53 55 56
    ADD_EXPR <expr> (77)
        on left: 57 58 59
        on right: 54 55 56 58 59
    MULT_EXPR <expr> (78)
        on left: 60 61 62 63
        on right: 57 58 59 61 62 63
    UNARY <expr> (79)
        on left: 64 65 66 67 68 69 70 71
        on right: 60 61 62 63 65 66 67 68 69 70 71
    FACTOR <expr> (80)
        on left: 72 73 74 75 76 77
        on right: 28 29 30 31 32 33 34 35 36 64
    REC_STATEMENT <expr> (81)
        on left: 78 79
        on right: 79 90 92
    STATEMENT <expr> (82)
        on left: 80 81 82 83 84 85
        on right: 78 79 86 87 93 94 95 96 97
    SWITCH_STATEMENT <expr> (83)
        on left: 86 87
        on right: 85
    EXPR_STATEMENT <expr> (84)
        on left: 88
        on right: 80 97
    FUNC_STATEMENT <expr> (85)
        on left: 89 90 91 92
        on right: 6 7 84
    SELECT_STATEMENT <expr> (86)
        on left: 93 94 95
        on right: 83
    ITER_STATEMENT <expr> (87)
        on left: 96 97
        on right: 81
    JUMP_STATEMENT <expr> (88)
        on left: 98 99 100 101 102
        on right: 82


State 0

    0 $accept: . ROOT $end

    VARTYPE_INT  shift, and go to state 1

    ROOT         go to state 2
    EXPR_TREE    go to state 3
    EXPR_SINGLE  go to state 4
    FUNCTION     go to state 5
    DECLARATION  go to state 6


State 1

    6 FUNCTION: VARTYPE_INT . DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT . DECLARATOR TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT
    8         | VARTYPE_INT . DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET TOK_SEMICOLON
    9         | VARTYPE_INT . DECLARATOR TOK_LBRACKET TOK_RBRACKET TOK_SEMICOLON
   12 DECLARATION: VARTYPE_INT . DECLARATOR TOK_SEMICOLON
   13            | VARTYPE_INT . ARRAY_DECLARATOR TOK_SEMICOLON
   14            | VARTYPE_INT . DECLARATOR TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON
   15            | VARTYPE_INT . ARRAY_DECLARATOR TOK_EQASSIGN TOK_LCBRACKET TOK_RCBRACKET TOK_SEMICOLON
   16            | VARTYPE_INT . ARRAY_DECLARATOR TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON

    TOK_VAR  shift, and go to state 7

    DECLARATOR        go to state 8
    ARRAY_DECLARATOR  go to state 9


State 2

    0 $accept: ROOT . $end

    $end  shift, and go to state 10


State 3

    1 ROOT: EXPR_TREE .
    3 EXPR_TREE: EXPR_TREE . EXPR_SINGLE

    VARTYPE_INT  shift, and go to state 1

    $default  reduce using rule 1 (ROOT)

    EXPR_SINGLE  go to state 11
    FUNCTION     go to state 5
    DECLARATION  go to state 6


State 4

    2 EXPR_TREE: EXPR_SINGLE .

    $default  reduce using rule 2 (EXPR_TREE)


State 5

    4 EXPR_SINGLE: FUNCTION .

    $default  reduce using rule 4 (EXPR_SINGLE)


State 6

    5 EXPR_SINGLE: DECLARATION .

    $default  reduce using rule 5 (EXPR_SINGLE)


State 7

   22 DECLARATOR: TOK_VAR .
   23 ARRAY_DECLARATOR: TOK_VAR . TOK_LSQBRACKET LOGIC_EXPR TOK_RSQBRACKET
   24                 | TOK_VAR . TOK_LSQBRACKET TOK_RSQBRACKET

    TOK_LSQBRACKET  shift, and go to state 12

    $default  reduce using rule 22 (DECLARATOR)


State 8

    6 FUNCTION: VARTYPE_INT DECLARATOR . TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT DECLARATOR . TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT
    8         | VARTYPE_INT DECLARATOR . TOK_LBRACKET FUNC_ARGS TOK_RBRACKET TOK_SEMICOLON
    9         | VARTYPE_INT DECLARATOR . TOK_LBRACKET TOK_RBRACKET TOK_SEMICOLON
   12 DECLARATION: VARTYPE_INT DECLARATOR . TOK_SEMICOLON
   14            | VARTYPE_INT DECLARATOR . TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON

    TOK_LBRACKET   shift, and go to state 13
    TOK_SEMICOLON  shift, and go to state 14
    TOK_EQASSIGN   shift, and go to state 15


State 9

   13 DECLARATION: VARTYPE_INT ARRAY_DECLARATOR . TOK_SEMICOLON
   15            | VARTYPE_INT ARRAY_DECLARATOR . TOK_EQASSIGN TOK_LCBRACKET TOK_RCBRACKET TOK_SEMICOLON
   16            | VARTYPE_INT ARRAY_DECLARATOR . TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 16
    TOK_EQASSIGN   shift, and go to state 17


State 10

    0 $accept: ROOT $end .

    $default  accept


State 11

    3 EXPR_TREE: EXPR_TREE EXPR_SINGLE .

    $default  reduce using rule 3 (EXPR_TREE)


State 12

   23 ARRAY_DECLARATOR: TOK_VAR TOK_LSQBRACKET . LOGIC_EXPR TOK_RSQBRACKET
   24                 | TOK_VAR TOK_LSQBRACKET . TOK_RSQBRACKET

    TOK_LOGIC_NOT   shift, and go to state 18
    TOK_BIT_NOT     shift, and go to state 19
    TOK_MINUS       shift, and go to state 20
    TOK_LBRACKET    shift, and go to state 21
    TOK_RSQBRACKET  shift, and go to state 22
    TOK_N           shift, and go to state 23
    TOK_VAR         shift, and go to state 24
    TOK_INCR        shift, and go to state 25
    TOK_DECR        shift, and go to state 26

    LOGIC_EXPR  go to state 27
    BIT_EXPR    go to state 28
    EQ_EXPR     go to state 29
    REL_EXPR    go to state 30
    SHIFT_EXPR  go to state 31
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 13

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET . FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT DECLARATOR TOK_LBRACKET . TOK_RBRACKET FUNC_STATEMENT
    8         | VARTYPE_INT DECLARATOR TOK_LBRACKET . FUNC_ARGS TOK_RBRACKET TOK_SEMICOLON
    9         | VARTYPE_INT DECLARATOR TOK_LBRACKET . TOK_RBRACKET TOK_SEMICOLON

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_RBRACKET   shift, and go to state 36
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    VARTYPE_INT    shift, and go to state 37
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    SINGLE_DECL  go to state 38
    FUNC_ARGS    go to state 39
    ARG_SINGLE   go to state 40
    ASSIGN_EXPR  go to state 41
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 14

   12 DECLARATION: VARTYPE_INT DECLARATOR TOK_SEMICOLON .

    $default  reduce using rule 12 (DECLARATION)


State 15

   14 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN . ASSIGN_EXPR TOK_SEMICOLON

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 45
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 16

   13 DECLARATION: VARTYPE_INT ARRAY_DECLARATOR TOK_SEMICOLON .

    $default  reduce using rule 13 (DECLARATION)


State 17

   15 DECLARATION: VARTYPE_INT ARRAY_DECLARATOR TOK_EQASSIGN . TOK_LCBRACKET TOK_RCBRACKET TOK_SEMICOLON
   16            | VARTYPE_INT ARRAY_DECLARATOR TOK_EQASSIGN . TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON

    TOK_LCBRACKET  shift, and go to state 46


State 18

   66 UNARY: TOK_LOGIC_NOT . UNARY

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    UNARY   go to state 47
    FACTOR  go to state 35


State 19

   67 UNARY: TOK_BIT_NOT . UNARY

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    UNARY   go to state 48
    FACTOR  go to state 35


State 20

   65 UNARY: TOK_MINUS . UNARY

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    UNARY   go to state 49
    FACTOR  go to state 35


State 21

   74 FACTOR: TOK_LBRACKET . ASSIGN_EXPR TOK_RBRACKET

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 50
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 22

   24 ARRAY_DECLARATOR: TOK_VAR TOK_LSQBRACKET TOK_RSQBRACKET .

    $default  reduce using rule 24 (ARRAY_DECLARATOR)


State 23

   72 FACTOR: TOK_N .

    $default  reduce using rule 72 (FACTOR)


State 24

   73 FACTOR: TOK_VAR .
   75       | TOK_VAR . TOK_LBRACKET TOK_RBRACKET
   76       | TOK_VAR . TOK_LBRACKET FUNC_CALL_ARGS TOK_RBRACKET
   77       | TOK_VAR . TOK_LSQBRACKET ASSIGN_EXPR TOK_RSQBRACKET

    TOK_LBRACKET    shift, and go to state 51
    TOK_LSQBRACKET  shift, and go to state 52

    $default  reduce using rule 73 (FACTOR)


State 25

   68 UNARY: TOK_INCR . UNARY

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    UNARY   go to state 53
    FACTOR  go to state 35


State 26

   69 UNARY: TOK_DECR . UNARY

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    UNARY   go to state 54
    FACTOR  go to state 35


State 27

   23 ARRAY_DECLARATOR: TOK_VAR TOK_LSQBRACKET LOGIC_EXPR . TOK_RSQBRACKET
   40 LOGIC_EXPR: LOGIC_EXPR . TOK_LOGIC_AND BIT_EXPR
   41           | LOGIC_EXPR . TOK_LOGIC_OR BIT_EXPR

    TOK_LOGIC_AND   shift, and go to state 55
    TOK_LOGIC_OR    shift, and go to state 56
    TOK_RSQBRACKET  shift, and go to state 57


State 28

   39 LOGIC_EXPR: BIT_EXPR .
   43 BIT_EXPR: BIT_EXPR . TOK_BIT_AND EQ_EXPR
   44         | BIT_EXPR . TOK_BIT_OR EQ_EXPR
   45         | BIT_EXPR . TOK_BIT_XOR EQ_EXPR

    TOK_BIT_AND  shift, and go to state 58
    TOK_BIT_OR   shift, and go to state 59
    TOK_BIT_XOR  shift, and go to state 60

    $default  reduce using rule 39 (LOGIC_EXPR)


State 29

   42 BIT_EXPR: EQ_EXPR .
   47 EQ_EXPR: EQ_EXPR . TOK_EQ REL_EXPR
   48        | EQ_EXPR . TOK_NEQ REL_EXPR

    TOK_EQ   shift, and go to state 61
    TOK_NEQ  shift, and go to state 62

    $default  reduce using rule 42 (BIT_EXPR)


State 30

   46 EQ_EXPR: REL_EXPR .
   50 REL_EXPR: REL_EXPR . TOK_LE SHIFT_EXPR
   51         | REL_EXPR . TOK_GE SHIFT_EXPR
   52         | REL_EXPR . TOK_G SHIFT_EXPR
   53         | REL_EXPR . TOK_L SHIFT_EXPR

    TOK_GE  shift, and go to state 63
    TOK_LE  shift, and go to state 64
    TOK_G   shift, and go to state 65
    TOK_L   shift, and go to state 66

    $default  reduce using rule 46 (EQ_EXPR)


State 31

   49 REL_EXPR: SHIFT_EXPR .
   55 SHIFT_EXPR: SHIFT_EXPR . TOK_LSHIFT ADD_EXPR
   56           | SHIFT_EXPR . TOK_RSHIFT ADD_EXPR

    TOK_LSHIFT  shift, and go to state 67
    TOK_RSHIFT  shift, and go to state 68

    $default  reduce using rule 49 (REL_EXPR)


State 32

   54 SHIFT_EXPR: ADD_EXPR .
   58 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   59         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 69
    TOK_MINUS  shift, and go to state 70

    $default  reduce using rule 54 (SHIFT_EXPR)


State 33

   57 ADD_EXPR: MULT_EXPR .
   61 MULT_EXPR: MULT_EXPR . TOK_MUL UNARY
   62          | MULT_EXPR . TOK_DIVIDE UNARY
   63          | MULT_EXPR . TOK_MOD UNARY

    TOK_MUL     shift, and go to state 71
    TOK_DIVIDE  shift, and go to state 72
    TOK_MOD     shift, and go to state 73

    $default  reduce using rule 57 (ADD_EXPR)


State 34

   60 MULT_EXPR: UNARY .
   70 UNARY: UNARY . TOK_INCR
   71      | UNARY . TOK_DECR

    TOK_INCR  shift, and go to state 74
    TOK_DECR  shift, and go to state 75

    $default  reduce using rule 60 (MULT_EXPR)


State 35

   64 UNARY: FACTOR .

    $default  reduce using rule 64 (UNARY)


State 36

    7 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET TOK_RBRACKET . FUNC_STATEMENT
    9         | VARTYPE_INT DECLARATOR TOK_LBRACKET TOK_RBRACKET . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 76
    TOK_LCBRACKET  shift, and go to state 77

    FUNC_STATEMENT  go to state 78


State 37

   17 SINGLE_DECL: VARTYPE_INT . DECLARATOR

    TOK_VAR  shift, and go to state 79

    DECLARATOR  go to state 80


State 38

   25 ARG_SINGLE: SINGLE_DECL .

    $default  reduce using rule 25 (ARG_SINGLE)


State 39

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS . TOK_RBRACKET FUNC_STATEMENT
    8         | VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS . TOK_RBRACKET TOK_SEMICOLON
   19 FUNC_ARGS: FUNC_ARGS . TOK_COMMA ARG_SINGLE

    TOK_RBRACKET  shift, and go to state 81
    TOK_COMMA     shift, and go to state 82


State 40

   18 FUNC_ARGS: ARG_SINGLE .

    $default  reduce using rule 18 (FUNC_ARGS)


State 41

   26 ARG_SINGLE: ASSIGN_EXPR .

    $default  reduce using rule 26 (ARG_SINGLE)


State 42

   27 ASSIGN_EXPR: COND_EXPR .

    $default  reduce using rule 27 (ASSIGN_EXPR)


State 43

   37 COND_EXPR: LOGIC_EXPR .
   38          | LOGIC_EXPR . TOK_QMARK ASSIGN_EXPR TOK_COLON COND_EXPR
   40 LOGIC_EXPR: LOGIC_EXPR . TOK_LOGIC_AND BIT_EXPR
   41           | LOGIC_EXPR . TOK_LOGIC_OR BIT_EXPR

    TOK_LOGIC_AND  shift, and go to state 55
    TOK_LOGIC_OR   shift, and go to state 56
    TOK_QMARK      shift, and go to state 83

    $default  reduce using rule 37 (COND_EXPR)


State 44

   28 ASSIGN_EXPR: FACTOR . TOK_EQASSIGN ASSIGN_EXPR
   29            | FACTOR . TOK_ADDASSIGN ASSIGN_EXPR
   30            | FACTOR . TOK_SUBASSIGN ASSIGN_EXPR
   31            | FACTOR . TOK_MULASSIGN ASSIGN_EXPR
   32            | FACTOR . TOK_DIVASSIGN ASSIGN_EXPR
   33            | FACTOR . TOK_MODASSIGN ASSIGN_EXPR
   34            | FACTOR . TOK_ANDASSIGN ASSIGN_EXPR
   35            | FACTOR . TOK_ORASSIGN ASSIGN_EXPR
   36            | FACTOR . TOK_XORASSIGN ASSIGN_EXPR
   64 UNARY: FACTOR .

    TOK_SUBASSIGN  shift, and go to state 84
    TOK_MULASSIGN  shift, and go to state 85
    TOK_DIVASSIGN  shift, and go to state 86
    TOK_ADDASSIGN  shift, and go to state 87
    TOK_EQASSIGN   shift, and go to state 88
    TOK_MODASSIGN  shift, and go to state 89
    TOK_ANDASSIGN  shift, and go to state 90
    TOK_ORASSIGN   shift, and go to state 91
    TOK_XORASSIGN  shift, and go to state 92

    $default  reduce using rule 64 (UNARY)


State 45

   14 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN ASSIGN_EXPR . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 93


State 46

   15 DECLARATION: VARTYPE_INT ARRAY_DECLARATOR TOK_EQASSIGN TOK_LCBRACKET . TOK_RCBRACKET TOK_SEMICOLON
   16            | VARTYPE_INT ARRAY_DECLARATOR TOK_EQASSIGN TOK_LCBRACKET . FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_RCBRACKET  shift, and go to state 94
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    VARTYPE_INT    shift, and go to state 37
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    SINGLE_DECL     go to state 38
    FUNC_CALL_ARGS  go to state 95
    ARG_SINGLE      go to state 96
    ASSIGN_EXPR     go to state 41
    COND_EXPR       go to state 42
    LOGIC_EXPR      go to state 43
    BIT_EXPR        go to state 28
    EQ_EXPR         go to state 29
    REL_EXPR        go to state 30
    SHIFT_EXPR      go to state 31
    ADD_EXPR        go to state 32
    MULT_EXPR       go to state 33
    UNARY           go to state 34
    FACTOR          go to state 44


State 47

   66 UNARY: TOK_LOGIC_NOT UNARY .
   70      | UNARY . TOK_INCR
   71      | UNARY . TOK_DECR

    TOK_INCR  shift, and go to state 74
    TOK_DECR  shift, and go to state 75

    TOK_INCR  [reduce using rule 66 (UNARY)]
    TOK_DECR  [reduce using rule 66 (UNARY)]
    $default  reduce using rule 66 (UNARY)


State 48

   67 UNARY: TOK_BIT_NOT UNARY .
   70      | UNARY . TOK_INCR
   71      | UNARY . TOK_DECR

    TOK_INCR  shift, and go to state 74
    TOK_DECR  shift, and go to state 75

    TOK_INCR  [reduce using rule 67 (UNARY)]
    TOK_DECR  [reduce using rule 67 (UNARY)]
    $default  reduce using rule 67 (UNARY)


State 49

   65 UNARY: TOK_MINUS UNARY .
   70      | UNARY . TOK_INCR
   71      | UNARY . TOK_DECR

    TOK_INCR  shift, and go to state 74
    TOK_DECR  shift, and go to state 75

    TOK_INCR  [reduce using rule 65 (UNARY)]
    TOK_DECR  [reduce using rule 65 (UNARY)]
    $default  reduce using rule 65 (UNARY)


State 50

   74 FACTOR: TOK_LBRACKET ASSIGN_EXPR . TOK_RBRACKET

    TOK_RBRACKET  shift, and go to state 97


State 51

   75 FACTOR: TOK_VAR TOK_LBRACKET . TOK_RBRACKET
   76       | TOK_VAR TOK_LBRACKET . FUNC_CALL_ARGS TOK_RBRACKET

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_RBRACKET   shift, and go to state 98
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    VARTYPE_INT    shift, and go to state 37
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    SINGLE_DECL     go to state 38
    FUNC_CALL_ARGS  go to state 99
    ARG_SINGLE      go to state 96
    ASSIGN_EXPR     go to state 41
    COND_EXPR       go to state 42
    LOGIC_EXPR      go to state 43
    BIT_EXPR        go to state 28
    EQ_EXPR         go to state 29
    REL_EXPR        go to state 30
    SHIFT_EXPR      go to state 31
    ADD_EXPR        go to state 32
    MULT_EXPR       go to state 33
    UNARY           go to state 34
    FACTOR          go to state 44


State 52

   77 FACTOR: TOK_VAR TOK_LSQBRACKET . ASSIGN_EXPR TOK_RSQBRACKET

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 100
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 53

   68 UNARY: TOK_INCR UNARY .
   70      | UNARY . TOK_INCR
   71      | UNARY . TOK_DECR

    TOK_INCR  shift, and go to state 74
    TOK_DECR  shift, and go to state 75

    TOK_INCR  [reduce using rule 68 (UNARY)]
    TOK_DECR  [reduce using rule 68 (UNARY)]
    $default  reduce using rule 68 (UNARY)


State 54

   69 UNARY: TOK_DECR UNARY .
   70      | UNARY . TOK_INCR
   71      | UNARY . TOK_DECR

    TOK_INCR  shift, and go to state 74
    TOK_DECR  shift, and go to state 75

    TOK_INCR  [reduce using rule 69 (UNARY)]
    TOK_DECR  [reduce using rule 69 (UNARY)]
    $default  reduce using rule 69 (UNARY)


State 55

   40 LOGIC_EXPR: LOGIC_EXPR TOK_LOGIC_AND . BIT_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    BIT_EXPR    go to state 101
    EQ_EXPR     go to state 29
    REL_EXPR    go to state 30
    SHIFT_EXPR  go to state 31
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 56

   41 LOGIC_EXPR: LOGIC_EXPR TOK_LOGIC_OR . BIT_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    BIT_EXPR    go to state 102
    EQ_EXPR     go to state 29
    REL_EXPR    go to state 30
    SHIFT_EXPR  go to state 31
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 57

   23 ARRAY_DECLARATOR: TOK_VAR TOK_LSQBRACKET LOGIC_EXPR TOK_RSQBRACKET .

    $default  reduce using rule 23 (ARRAY_DECLARATOR)


State 58

   43 BIT_EXPR: BIT_EXPR TOK_BIT_AND . EQ_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    EQ_EXPR     go to state 103
    REL_EXPR    go to state 30
    SHIFT_EXPR  go to state 31
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 59

   44 BIT_EXPR: BIT_EXPR TOK_BIT_OR . EQ_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    EQ_EXPR     go to state 104
    REL_EXPR    go to state 30
    SHIFT_EXPR  go to state 31
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 60

   45 BIT_EXPR: BIT_EXPR TOK_BIT_XOR . EQ_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    EQ_EXPR     go to state 105
    REL_EXPR    go to state 30
    SHIFT_EXPR  go to state 31
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 61

   47 EQ_EXPR: EQ_EXPR TOK_EQ . REL_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    REL_EXPR    go to state 106
    SHIFT_EXPR  go to state 31
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 62

   48 EQ_EXPR: EQ_EXPR TOK_NEQ . REL_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    REL_EXPR    go to state 107
    SHIFT_EXPR  go to state 31
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 63

   51 REL_EXPR: REL_EXPR TOK_GE . SHIFT_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    SHIFT_EXPR  go to state 108
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 64

   50 REL_EXPR: REL_EXPR TOK_LE . SHIFT_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    SHIFT_EXPR  go to state 109
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 65

   52 REL_EXPR: REL_EXPR TOK_G . SHIFT_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    SHIFT_EXPR  go to state 110
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 66

   53 REL_EXPR: REL_EXPR TOK_L . SHIFT_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    SHIFT_EXPR  go to state 111
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 67

   55 SHIFT_EXPR: SHIFT_EXPR TOK_LSHIFT . ADD_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ADD_EXPR   go to state 112
    MULT_EXPR  go to state 33
    UNARY      go to state 34
    FACTOR     go to state 35


State 68

   56 SHIFT_EXPR: SHIFT_EXPR TOK_RSHIFT . ADD_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ADD_EXPR   go to state 113
    MULT_EXPR  go to state 33
    UNARY      go to state 34
    FACTOR     go to state 35


State 69

   58 ADD_EXPR: ADD_EXPR TOK_PLUS . MULT_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    MULT_EXPR  go to state 114
    UNARY      go to state 34
    FACTOR     go to state 35


State 70

   59 ADD_EXPR: ADD_EXPR TOK_MINUS . MULT_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    MULT_EXPR  go to state 115
    UNARY      go to state 34
    FACTOR     go to state 35


State 71

   61 MULT_EXPR: MULT_EXPR TOK_MUL . UNARY

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    UNARY   go to state 116
    FACTOR  go to state 35


State 72

   62 MULT_EXPR: MULT_EXPR TOK_DIVIDE . UNARY

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    UNARY   go to state 117
    FACTOR  go to state 35


State 73

   63 MULT_EXPR: MULT_EXPR TOK_MOD . UNARY

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    UNARY   go to state 118
    FACTOR  go to state 35


State 74

   70 UNARY: UNARY TOK_INCR .

    $default  reduce using rule 70 (UNARY)


State 75

   71 UNARY: UNARY TOK_DECR .

    $default  reduce using rule 71 (UNARY)


State 76

    9 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET TOK_RBRACKET TOK_SEMICOLON .

    $default  reduce using rule 9 (FUNCTION)


State 77

   89 FUNC_STATEMENT: TOK_LCBRACKET . TOK_RCBRACKET
   90               | TOK_LCBRACKET . REC_STATEMENT TOK_RCBRACKET
   91               | TOK_LCBRACKET . REC_DECLARATION TOK_RCBRACKET
   92               | TOK_LCBRACKET . REC_DECLARATION REC_STATEMENT TOK_RCBRACKET

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_IF         shift, and go to state 119
    TOK_WHILE      shift, and go to state 120
    TOK_FOR        shift, and go to state 121
    TOK_SWITCH     shift, and go to state 122
    TOK_CASE       shift, and go to state 123
    TOK_DEFAULT    shift, and go to state 124
    TOK_RETURN     shift, and go to state 125
    TOK_BREAK      shift, and go to state 126
    TOK_CONT       shift, and go to state 127
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_LCBRACKET  shift, and go to state 77
    TOK_RCBRACKET  shift, and go to state 128
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    VARTYPE_INT    shift, and go to state 129
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    REC_DECLARATION   go to state 130
    DECLARATION       go to state 131
    ASSIGN_EXPR       go to state 132
    COND_EXPR         go to state 42
    LOGIC_EXPR        go to state 43
    BIT_EXPR          go to state 28
    EQ_EXPR           go to state 29
    REL_EXPR          go to state 30
    SHIFT_EXPR        go to state 31
    ADD_EXPR          go to state 32
    MULT_EXPR         go to state 33
    UNARY             go to state 34
    FACTOR            go to state 44
    REC_STATEMENT     go to state 133
    STATEMENT         go to state 134
    SWITCH_STATEMENT  go to state 135
    EXPR_STATEMENT    go to state 136
    FUNC_STATEMENT    go to state 137
    SELECT_STATEMENT  go to state 138
    ITER_STATEMENT    go to state 139
    JUMP_STATEMENT    go to state 140


State 78

    7 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT .

    $default  reduce using rule 7 (FUNCTION)


State 79

   22 DECLARATOR: TOK_VAR .

    $default  reduce using rule 22 (DECLARATOR)


State 80

   17 SINGLE_DECL: VARTYPE_INT DECLARATOR .

    $default  reduce using rule 17 (SINGLE_DECL)


State 81

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET . FUNC_STATEMENT
    8         | VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 141
    TOK_LCBRACKET  shift, and go to state 77

    FUNC_STATEMENT  go to state 142


State 82

   19 FUNC_ARGS: FUNC_ARGS TOK_COMMA . ARG_SINGLE

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    VARTYPE_INT    shift, and go to state 37
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    SINGLE_DECL  go to state 38
    ARG_SINGLE   go to state 143
    ASSIGN_EXPR  go to state 41
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 83

   38 COND_EXPR: LOGIC_EXPR TOK_QMARK . ASSIGN_EXPR TOK_COLON COND_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 144
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 84

   30 ASSIGN_EXPR: FACTOR TOK_SUBASSIGN . ASSIGN_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 145
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 85

   31 ASSIGN_EXPR: FACTOR TOK_MULASSIGN . ASSIGN_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 146
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 86

   32 ASSIGN_EXPR: FACTOR TOK_DIVASSIGN . ASSIGN_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 147
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 87

   29 ASSIGN_EXPR: FACTOR TOK_ADDASSIGN . ASSIGN_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 148
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 88

   28 ASSIGN_EXPR: FACTOR TOK_EQASSIGN . ASSIGN_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 149
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 89

   33 ASSIGN_EXPR: FACTOR TOK_MODASSIGN . ASSIGN_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 150
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 90

   34 ASSIGN_EXPR: FACTOR TOK_ANDASSIGN . ASSIGN_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 151
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 91

   35 ASSIGN_EXPR: FACTOR TOK_ORASSIGN . ASSIGN_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 152
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 92

   36 ASSIGN_EXPR: FACTOR TOK_XORASSIGN . ASSIGN_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 153
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 93

   14 DECLARATION: VARTYPE_INT DECLARATOR TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON .

    $default  reduce using rule 14 (DECLARATION)


State 94

   15 DECLARATION: VARTYPE_INT ARRAY_DECLARATOR TOK_EQASSIGN TOK_LCBRACKET TOK_RCBRACKET . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 154


State 95

   16 DECLARATION: VARTYPE_INT ARRAY_DECLARATOR TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS . TOK_RCBRACKET TOK_SEMICOLON
   21 FUNC_CALL_ARGS: FUNC_CALL_ARGS . TOK_COMMA ARG_SINGLE

    TOK_RCBRACKET  shift, and go to state 155
    TOK_COMMA      shift, and go to state 156


State 96

   20 FUNC_CALL_ARGS: ARG_SINGLE .

    $default  reduce using rule 20 (FUNC_CALL_ARGS)


State 97

   74 FACTOR: TOK_LBRACKET ASSIGN_EXPR TOK_RBRACKET .

    $default  reduce using rule 74 (FACTOR)


State 98

   75 FACTOR: TOK_VAR TOK_LBRACKET TOK_RBRACKET .

    $default  reduce using rule 75 (FACTOR)


State 99

   21 FUNC_CALL_ARGS: FUNC_CALL_ARGS . TOK_COMMA ARG_SINGLE
   76 FACTOR: TOK_VAR TOK_LBRACKET FUNC_CALL_ARGS . TOK_RBRACKET

    TOK_RBRACKET  shift, and go to state 157
    TOK_COMMA     shift, and go to state 156


State 100

   77 FACTOR: TOK_VAR TOK_LSQBRACKET ASSIGN_EXPR . TOK_RSQBRACKET

    TOK_RSQBRACKET  shift, and go to state 158


State 101

   40 LOGIC_EXPR: LOGIC_EXPR TOK_LOGIC_AND BIT_EXPR .
   43 BIT_EXPR: BIT_EXPR . TOK_BIT_AND EQ_EXPR
   44         | BIT_EXPR . TOK_BIT_OR EQ_EXPR
   45         | BIT_EXPR . TOK_BIT_XOR EQ_EXPR

    TOK_BIT_AND  shift, and go to state 58
    TOK_BIT_OR   shift, and go to state 59
    TOK_BIT_XOR  shift, and go to state 60

    $default  reduce using rule 40 (LOGIC_EXPR)


State 102

   41 LOGIC_EXPR: LOGIC_EXPR TOK_LOGIC_OR BIT_EXPR .
   43 BIT_EXPR: BIT_EXPR . TOK_BIT_AND EQ_EXPR
   44         | BIT_EXPR . TOK_BIT_OR EQ_EXPR
   45         | BIT_EXPR . TOK_BIT_XOR EQ_EXPR

    TOK_BIT_AND  shift, and go to state 58
    TOK_BIT_OR   shift, and go to state 59
    TOK_BIT_XOR  shift, and go to state 60

    $default  reduce using rule 41 (LOGIC_EXPR)


State 103

   43 BIT_EXPR: BIT_EXPR TOK_BIT_AND EQ_EXPR .
   47 EQ_EXPR: EQ_EXPR . TOK_EQ REL_EXPR
   48        | EQ_EXPR . TOK_NEQ REL_EXPR

    TOK_EQ   shift, and go to state 61
    TOK_NEQ  shift, and go to state 62

    $default  reduce using rule 43 (BIT_EXPR)


State 104

   44 BIT_EXPR: BIT_EXPR TOK_BIT_OR EQ_EXPR .
   47 EQ_EXPR: EQ_EXPR . TOK_EQ REL_EXPR
   48        | EQ_EXPR . TOK_NEQ REL_EXPR

    TOK_EQ   shift, and go to state 61
    TOK_NEQ  shift, and go to state 62

    $default  reduce using rule 44 (BIT_EXPR)


State 105

   45 BIT_EXPR: BIT_EXPR TOK_BIT_XOR EQ_EXPR .
   47 EQ_EXPR: EQ_EXPR . TOK_EQ REL_EXPR
   48        | EQ_EXPR . TOK_NEQ REL_EXPR

    TOK_EQ   shift, and go to state 61
    TOK_NEQ  shift, and go to state 62

    $default  reduce using rule 45 (BIT_EXPR)


State 106

   47 EQ_EXPR: EQ_EXPR TOK_EQ REL_EXPR .
   50 REL_EXPR: REL_EXPR . TOK_LE SHIFT_EXPR
   51         | REL_EXPR . TOK_GE SHIFT_EXPR
   52         | REL_EXPR . TOK_G SHIFT_EXPR
   53         | REL_EXPR . TOK_L SHIFT_EXPR

    TOK_GE  shift, and go to state 63
    TOK_LE  shift, and go to state 64
    TOK_G   shift, and go to state 65
    TOK_L   shift, and go to state 66

    $default  reduce using rule 47 (EQ_EXPR)


State 107

   48 EQ_EXPR: EQ_EXPR TOK_NEQ REL_EXPR .
   50 REL_EXPR: REL_EXPR . TOK_LE SHIFT_EXPR
   51         | REL_EXPR . TOK_GE SHIFT_EXPR
   52         | REL_EXPR . TOK_G SHIFT_EXPR
   53         | REL_EXPR . TOK_L SHIFT_EXPR

    TOK_GE  shift, and go to state 63
    TOK_LE  shift, and go to state 64
    TOK_G   shift, and go to state 65
    TOK_L   shift, and go to state 66

    $default  reduce using rule 48 (EQ_EXPR)


State 108

   51 REL_EXPR: REL_EXPR TOK_GE SHIFT_EXPR .
   55 SHIFT_EXPR: SHIFT_EXPR . TOK_LSHIFT ADD_EXPR
   56           | SHIFT_EXPR . TOK_RSHIFT ADD_EXPR

    TOK_LSHIFT  shift, and go to state 67
    TOK_RSHIFT  shift, and go to state 68

    $default  reduce using rule 51 (REL_EXPR)


State 109

   50 REL_EXPR: REL_EXPR TOK_LE SHIFT_EXPR .
   55 SHIFT_EXPR: SHIFT_EXPR . TOK_LSHIFT ADD_EXPR
   56           | SHIFT_EXPR . TOK_RSHIFT ADD_EXPR

    TOK_LSHIFT  shift, and go to state 67
    TOK_RSHIFT  shift, and go to state 68

    $default  reduce using rule 50 (REL_EXPR)


State 110

   52 REL_EXPR: REL_EXPR TOK_G SHIFT_EXPR .
   55 SHIFT_EXPR: SHIFT_EXPR . TOK_LSHIFT ADD_EXPR
   56           | SHIFT_EXPR . TOK_RSHIFT ADD_EXPR

    TOK_LSHIFT  shift, and go to state 67
    TOK_RSHIFT  shift, and go to state 68

    $default  reduce using rule 52 (REL_EXPR)


State 111

   53 REL_EXPR: REL_EXPR TOK_L SHIFT_EXPR .
   55 SHIFT_EXPR: SHIFT_EXPR . TOK_LSHIFT ADD_EXPR
   56           | SHIFT_EXPR . TOK_RSHIFT ADD_EXPR

    TOK_LSHIFT  shift, and go to state 67
    TOK_RSHIFT  shift, and go to state 68

    $default  reduce using rule 53 (REL_EXPR)


State 112

   55 SHIFT_EXPR: SHIFT_EXPR TOK_LSHIFT ADD_EXPR .
   58 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   59         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 69
    TOK_MINUS  shift, and go to state 70

    $default  reduce using rule 55 (SHIFT_EXPR)


State 113

   56 SHIFT_EXPR: SHIFT_EXPR TOK_RSHIFT ADD_EXPR .
   58 ADD_EXPR: ADD_EXPR . TOK_PLUS MULT_EXPR
   59         | ADD_EXPR . TOK_MINUS MULT_EXPR

    TOK_PLUS   shift, and go to state 69
    TOK_MINUS  shift, and go to state 70

    $default  reduce using rule 56 (SHIFT_EXPR)


State 114

   58 ADD_EXPR: ADD_EXPR TOK_PLUS MULT_EXPR .
   61 MULT_EXPR: MULT_EXPR . TOK_MUL UNARY
   62          | MULT_EXPR . TOK_DIVIDE UNARY
   63          | MULT_EXPR . TOK_MOD UNARY

    TOK_MUL     shift, and go to state 71
    TOK_DIVIDE  shift, and go to state 72
    TOK_MOD     shift, and go to state 73

    $default  reduce using rule 58 (ADD_EXPR)


State 115

   59 ADD_EXPR: ADD_EXPR TOK_MINUS MULT_EXPR .
   61 MULT_EXPR: MULT_EXPR . TOK_MUL UNARY
   62          | MULT_EXPR . TOK_DIVIDE UNARY
   63          | MULT_EXPR . TOK_MOD UNARY

    TOK_MUL     shift, and go to state 71
    TOK_DIVIDE  shift, and go to state 72
    TOK_MOD     shift, and go to state 73

    $default  reduce using rule 59 (ADD_EXPR)


State 116

   61 MULT_EXPR: MULT_EXPR TOK_MUL UNARY .
   70 UNARY: UNARY . TOK_INCR
   71      | UNARY . TOK_DECR

    TOK_INCR  shift, and go to state 74
    TOK_DECR  shift, and go to state 75

    $default  reduce using rule 61 (MULT_EXPR)


State 117

   62 MULT_EXPR: MULT_EXPR TOK_DIVIDE UNARY .
   70 UNARY: UNARY . TOK_INCR
   71      | UNARY . TOK_DECR

    TOK_INCR  shift, and go to state 74
    TOK_DECR  shift, and go to state 75

    $default  reduce using rule 62 (MULT_EXPR)


State 118

   63 MULT_EXPR: MULT_EXPR TOK_MOD UNARY .
   70 UNARY: UNARY . TOK_INCR
   71      | UNARY . TOK_DECR

    TOK_INCR  shift, and go to state 74
    TOK_DECR  shift, and go to state 75

    $default  reduce using rule 63 (MULT_EXPR)


State 119

   93 SELECT_STATEMENT: TOK_IF . TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT
   94                 | TOK_IF . TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT

    TOK_LBRACKET  shift, and go to state 159


State 120

   96 ITER_STATEMENT: TOK_WHILE . TOK_LBRACKET ASSIGN_EXPR TOK_RBRACKET STATEMENT

    TOK_LBRACKET  shift, and go to state 160


State 121

   97 ITER_STATEMENT: TOK_FOR . TOK_LBRACKET EXPR_STATEMENT EXPR_STATEMENT ASSIGN_EXPR TOK_RBRACKET STATEMENT

    TOK_LBRACKET  shift, and go to state 161


State 122

   95 SELECT_STATEMENT: TOK_SWITCH . TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT

    TOK_LBRACKET  shift, and go to state 162


State 123

   86 SWITCH_STATEMENT: TOK_CASE . COND_EXPR TOK_COLON STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    COND_EXPR   go to state 163
    LOGIC_EXPR  go to state 43
    BIT_EXPR    go to state 28
    EQ_EXPR     go to state 29
    REL_EXPR    go to state 30
    SHIFT_EXPR  go to state 31
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 124

   87 SWITCH_STATEMENT: TOK_DEFAULT . TOK_COLON STATEMENT

    TOK_COLON  shift, and go to state 164


State 125

  100 JUMP_STATEMENT: TOK_RETURN . TOK_SEMICOLON
  101               | TOK_RETURN . FUNCTION TOK_SEMICOLON
  102               | TOK_RETURN . LOGIC_EXPR TOK_SEMICOLON

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_SEMICOLON  shift, and go to state 165
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    VARTYPE_INT    shift, and go to state 166
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    FUNCTION    go to state 167
    LOGIC_EXPR  go to state 168
    BIT_EXPR    go to state 28
    EQ_EXPR     go to state 29
    REL_EXPR    go to state 30
    SHIFT_EXPR  go to state 31
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 126

   98 JUMP_STATEMENT: TOK_BREAK . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 169


State 127

   99 JUMP_STATEMENT: TOK_CONT . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 170


State 128

   89 FUNC_STATEMENT: TOK_LCBRACKET TOK_RCBRACKET .

    $default  reduce using rule 89 (FUNC_STATEMENT)


State 129

   12 DECLARATION: VARTYPE_INT . DECLARATOR TOK_SEMICOLON
   13            | VARTYPE_INT . ARRAY_DECLARATOR TOK_SEMICOLON
   14            | VARTYPE_INT . DECLARATOR TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON
   15            | VARTYPE_INT . ARRAY_DECLARATOR TOK_EQASSIGN TOK_LCBRACKET TOK_RCBRACKET TOK_SEMICOLON
   16            | VARTYPE_INT . ARRAY_DECLARATOR TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON

    TOK_VAR  shift, and go to state 7

    DECLARATOR        go to state 171
    ARRAY_DECLARATOR  go to state 9


State 130

   11 REC_DECLARATION: REC_DECLARATION . DECLARATION
   91 FUNC_STATEMENT: TOK_LCBRACKET REC_DECLARATION . TOK_RCBRACKET
   92               | TOK_LCBRACKET REC_DECLARATION . REC_STATEMENT TOK_RCBRACKET

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_IF         shift, and go to state 119
    TOK_WHILE      shift, and go to state 120
    TOK_FOR        shift, and go to state 121
    TOK_SWITCH     shift, and go to state 122
    TOK_CASE       shift, and go to state 123
    TOK_DEFAULT    shift, and go to state 124
    TOK_RETURN     shift, and go to state 125
    TOK_BREAK      shift, and go to state 126
    TOK_CONT       shift, and go to state 127
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_LCBRACKET  shift, and go to state 77
    TOK_RCBRACKET  shift, and go to state 172
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    VARTYPE_INT    shift, and go to state 129
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    DECLARATION       go to state 173
    ASSIGN_EXPR       go to state 132
    COND_EXPR         go to state 42
    LOGIC_EXPR        go to state 43
    BIT_EXPR          go to state 28
    EQ_EXPR           go to state 29
    REL_EXPR          go to state 30
    SHIFT_EXPR        go to state 31
    ADD_EXPR          go to state 32
    MULT_EXPR         go to state 33
    UNARY             go to state 34
    FACTOR            go to state 44
    REC_STATEMENT     go to state 174
    STATEMENT         go to state 134
    SWITCH_STATEMENT  go to state 135
    EXPR_STATEMENT    go to state 136
    FUNC_STATEMENT    go to state 137
    SELECT_STATEMENT  go to state 138
    ITER_STATEMENT    go to state 139
    JUMP_STATEMENT    go to state 140


State 131

   10 REC_DECLARATION: DECLARATION .

    $default  reduce using rule 10 (REC_DECLARATION)


State 132

   88 EXPR_STATEMENT: ASSIGN_EXPR . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 175


State 133

   79 REC_STATEMENT: REC_STATEMENT . STATEMENT
   90 FUNC_STATEMENT: TOK_LCBRACKET REC_STATEMENT . TOK_RCBRACKET

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_IF         shift, and go to state 119
    TOK_WHILE      shift, and go to state 120
    TOK_FOR        shift, and go to state 121
    TOK_SWITCH     shift, and go to state 122
    TOK_CASE       shift, and go to state 123
    TOK_DEFAULT    shift, and go to state 124
    TOK_RETURN     shift, and go to state 125
    TOK_BREAK      shift, and go to state 126
    TOK_CONT       shift, and go to state 127
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_LCBRACKET  shift, and go to state 77
    TOK_RCBRACKET  shift, and go to state 176
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR       go to state 132
    COND_EXPR         go to state 42
    LOGIC_EXPR        go to state 43
    BIT_EXPR          go to state 28
    EQ_EXPR           go to state 29
    REL_EXPR          go to state 30
    SHIFT_EXPR        go to state 31
    ADD_EXPR          go to state 32
    MULT_EXPR         go to state 33
    UNARY             go to state 34
    FACTOR            go to state 44
    STATEMENT         go to state 177
    SWITCH_STATEMENT  go to state 135
    EXPR_STATEMENT    go to state 136
    FUNC_STATEMENT    go to state 137
    SELECT_STATEMENT  go to state 138
    ITER_STATEMENT    go to state 139
    JUMP_STATEMENT    go to state 140


State 134

   78 REC_STATEMENT: STATEMENT .

    $default  reduce using rule 78 (REC_STATEMENT)


State 135

   85 STATEMENT: SWITCH_STATEMENT .

    $default  reduce using rule 85 (STATEMENT)


State 136

   80 STATEMENT: EXPR_STATEMENT .

    $default  reduce using rule 80 (STATEMENT)


State 137

   84 STATEMENT: FUNC_STATEMENT .

    $default  reduce using rule 84 (STATEMENT)


State 138

   83 STATEMENT: SELECT_STATEMENT .

    $default  reduce using rule 83 (STATEMENT)


State 139

   81 STATEMENT: ITER_STATEMENT .

    $default  reduce using rule 81 (STATEMENT)


State 140

   82 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 82 (STATEMENT)


State 141

    8 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET TOK_SEMICOLON .

    $default  reduce using rule 8 (FUNCTION)


State 142

    6 FUNCTION: VARTYPE_INT DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT .

    $default  reduce using rule 6 (FUNCTION)


State 143

   19 FUNC_ARGS: FUNC_ARGS TOK_COMMA ARG_SINGLE .

    $default  reduce using rule 19 (FUNC_ARGS)


State 144

   38 COND_EXPR: LOGIC_EXPR TOK_QMARK ASSIGN_EXPR . TOK_COLON COND_EXPR

    TOK_COLON  shift, and go to state 178


State 145

   30 ASSIGN_EXPR: FACTOR TOK_SUBASSIGN ASSIGN_EXPR .

    $default  reduce using rule 30 (ASSIGN_EXPR)


State 146

   31 ASSIGN_EXPR: FACTOR TOK_MULASSIGN ASSIGN_EXPR .

    $default  reduce using rule 31 (ASSIGN_EXPR)


State 147

   32 ASSIGN_EXPR: FACTOR TOK_DIVASSIGN ASSIGN_EXPR .

    $default  reduce using rule 32 (ASSIGN_EXPR)


State 148

   29 ASSIGN_EXPR: FACTOR TOK_ADDASSIGN ASSIGN_EXPR .

    $default  reduce using rule 29 (ASSIGN_EXPR)


State 149

   28 ASSIGN_EXPR: FACTOR TOK_EQASSIGN ASSIGN_EXPR .

    $default  reduce using rule 28 (ASSIGN_EXPR)


State 150

   33 ASSIGN_EXPR: FACTOR TOK_MODASSIGN ASSIGN_EXPR .

    $default  reduce using rule 33 (ASSIGN_EXPR)


State 151

   34 ASSIGN_EXPR: FACTOR TOK_ANDASSIGN ASSIGN_EXPR .

    $default  reduce using rule 34 (ASSIGN_EXPR)


State 152

   35 ASSIGN_EXPR: FACTOR TOK_ORASSIGN ASSIGN_EXPR .

    $default  reduce using rule 35 (ASSIGN_EXPR)


State 153

   36 ASSIGN_EXPR: FACTOR TOK_XORASSIGN ASSIGN_EXPR .

    $default  reduce using rule 36 (ASSIGN_EXPR)


State 154

   15 DECLARATION: VARTYPE_INT ARRAY_DECLARATOR TOK_EQASSIGN TOK_LCBRACKET TOK_RCBRACKET TOK_SEMICOLON .

    $default  reduce using rule 15 (DECLARATION)


State 155

   16 DECLARATION: VARTYPE_INT ARRAY_DECLARATOR TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 179


State 156

   21 FUNC_CALL_ARGS: FUNC_CALL_ARGS TOK_COMMA . ARG_SINGLE

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    VARTYPE_INT    shift, and go to state 37
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    SINGLE_DECL  go to state 38
    ARG_SINGLE   go to state 180
    ASSIGN_EXPR  go to state 41
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 157

   76 FACTOR: TOK_VAR TOK_LBRACKET FUNC_CALL_ARGS TOK_RBRACKET .

    $default  reduce using rule 76 (FACTOR)


State 158

   77 FACTOR: TOK_VAR TOK_LSQBRACKET ASSIGN_EXPR TOK_RSQBRACKET .

    $default  reduce using rule 77 (FACTOR)


State 159

   93 SELECT_STATEMENT: TOK_IF TOK_LBRACKET . LOGIC_EXPR TOK_RBRACKET STATEMENT
   94                 | TOK_IF TOK_LBRACKET . LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    LOGIC_EXPR  go to state 181
    BIT_EXPR    go to state 28
    EQ_EXPR     go to state 29
    REL_EXPR    go to state 30
    SHIFT_EXPR  go to state 31
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 160

   96 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET . ASSIGN_EXPR TOK_RBRACKET STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 182
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 161

   97 ITER_STATEMENT: TOK_FOR TOK_LBRACKET . EXPR_STATEMENT EXPR_STATEMENT ASSIGN_EXPR TOK_RBRACKET STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR     go to state 132
    COND_EXPR       go to state 42
    LOGIC_EXPR      go to state 43
    BIT_EXPR        go to state 28
    EQ_EXPR         go to state 29
    REL_EXPR        go to state 30
    SHIFT_EXPR      go to state 31
    ADD_EXPR        go to state 32
    MULT_EXPR       go to state 33
    UNARY           go to state 34
    FACTOR          go to state 44
    EXPR_STATEMENT  go to state 183


State 162

   95 SELECT_STATEMENT: TOK_SWITCH TOK_LBRACKET . LOGIC_EXPR TOK_RBRACKET STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    LOGIC_EXPR  go to state 184
    BIT_EXPR    go to state 28
    EQ_EXPR     go to state 29
    REL_EXPR    go to state 30
    SHIFT_EXPR  go to state 31
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 163

   86 SWITCH_STATEMENT: TOK_CASE COND_EXPR . TOK_COLON STATEMENT

    TOK_COLON  shift, and go to state 185


State 164

   87 SWITCH_STATEMENT: TOK_DEFAULT TOK_COLON . STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_IF         shift, and go to state 119
    TOK_WHILE      shift, and go to state 120
    TOK_FOR        shift, and go to state 121
    TOK_SWITCH     shift, and go to state 122
    TOK_CASE       shift, and go to state 123
    TOK_DEFAULT    shift, and go to state 124
    TOK_RETURN     shift, and go to state 125
    TOK_BREAK      shift, and go to state 126
    TOK_CONT       shift, and go to state 127
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_LCBRACKET  shift, and go to state 77
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR       go to state 132
    COND_EXPR         go to state 42
    LOGIC_EXPR        go to state 43
    BIT_EXPR          go to state 28
    EQ_EXPR           go to state 29
    REL_EXPR          go to state 30
    SHIFT_EXPR        go to state 31
    ADD_EXPR          go to state 32
    MULT_EXPR         go to state 33
    UNARY             go to state 34
    FACTOR            go to state 44
    STATEMENT         go to state 186
    SWITCH_STATEMENT  go to state 135
    EXPR_STATEMENT    go to state 136
    FUNC_STATEMENT    go to state 137
    SELECT_STATEMENT  go to state 138
    ITER_STATEMENT    go to state 139
    JUMP_STATEMENT    go to state 140


State 165

  100 JUMP_STATEMENT: TOK_RETURN TOK_SEMICOLON .

    $default  reduce using rule 100 (JUMP_STATEMENT)


State 166

    6 FUNCTION: VARTYPE_INT . DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT . DECLARATOR TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT
    8         | VARTYPE_INT . DECLARATOR TOK_LBRACKET FUNC_ARGS TOK_RBRACKET TOK_SEMICOLON
    9         | VARTYPE_INT . DECLARATOR TOK_LBRACKET TOK_RBRACKET TOK_SEMICOLON

    TOK_VAR  shift, and go to state 79

    DECLARATOR  go to state 187


State 167

  101 JUMP_STATEMENT: TOK_RETURN FUNCTION . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 188


State 168

   40 LOGIC_EXPR: LOGIC_EXPR . TOK_LOGIC_AND BIT_EXPR
   41           | LOGIC_EXPR . TOK_LOGIC_OR BIT_EXPR
  102 JUMP_STATEMENT: TOK_RETURN LOGIC_EXPR . TOK_SEMICOLON

    TOK_LOGIC_AND  shift, and go to state 55
    TOK_LOGIC_OR   shift, and go to state 56
    TOK_SEMICOLON  shift, and go to state 189


State 169

   98 JUMP_STATEMENT: TOK_BREAK TOK_SEMICOLON .

    $default  reduce using rule 98 (JUMP_STATEMENT)


State 170

   99 JUMP_STATEMENT: TOK_CONT TOK_SEMICOLON .

    $default  reduce using rule 99 (JUMP_STATEMENT)


State 171

   12 DECLARATION: VARTYPE_INT DECLARATOR . TOK_SEMICOLON
   14            | VARTYPE_INT DECLARATOR . TOK_EQASSIGN ASSIGN_EXPR TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 14
    TOK_EQASSIGN   shift, and go to state 15


State 172

   91 FUNC_STATEMENT: TOK_LCBRACKET REC_DECLARATION TOK_RCBRACKET .

    $default  reduce using rule 91 (FUNC_STATEMENT)


State 173

   11 REC_DECLARATION: REC_DECLARATION DECLARATION .

    $default  reduce using rule 11 (REC_DECLARATION)


State 174

   79 REC_STATEMENT: REC_STATEMENT . STATEMENT
   92 FUNC_STATEMENT: TOK_LCBRACKET REC_DECLARATION REC_STATEMENT . TOK_RCBRACKET

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_IF         shift, and go to state 119
    TOK_WHILE      shift, and go to state 120
    TOK_FOR        shift, and go to state 121
    TOK_SWITCH     shift, and go to state 122
    TOK_CASE       shift, and go to state 123
    TOK_DEFAULT    shift, and go to state 124
    TOK_RETURN     shift, and go to state 125
    TOK_BREAK      shift, and go to state 126
    TOK_CONT       shift, and go to state 127
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_LCBRACKET  shift, and go to state 77
    TOK_RCBRACKET  shift, and go to state 190
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR       go to state 132
    COND_EXPR         go to state 42
    LOGIC_EXPR        go to state 43
    BIT_EXPR          go to state 28
    EQ_EXPR           go to state 29
    REL_EXPR          go to state 30
    SHIFT_EXPR        go to state 31
    ADD_EXPR          go to state 32
    MULT_EXPR         go to state 33
    UNARY             go to state 34
    FACTOR            go to state 44
    STATEMENT         go to state 177
    SWITCH_STATEMENT  go to state 135
    EXPR_STATEMENT    go to state 136
    FUNC_STATEMENT    go to state 137
    SELECT_STATEMENT  go to state 138
    ITER_STATEMENT    go to state 139
    JUMP_STATEMENT    go to state 140


State 175

   88 EXPR_STATEMENT: ASSIGN_EXPR TOK_SEMICOLON .

    $default  reduce using rule 88 (EXPR_STATEMENT)


State 176

   90 FUNC_STATEMENT: TOK_LCBRACKET REC_STATEMENT TOK_RCBRACKET .

    $default  reduce using rule 90 (FUNC_STATEMENT)


State 177

   79 REC_STATEMENT: REC_STATEMENT STATEMENT .

    $default  reduce using rule 79 (REC_STATEMENT)


State 178

   38 COND_EXPR: LOGIC_EXPR TOK_QMARK ASSIGN_EXPR TOK_COLON . COND_EXPR

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    COND_EXPR   go to state 191
    LOGIC_EXPR  go to state 43
    BIT_EXPR    go to state 28
    EQ_EXPR     go to state 29
    REL_EXPR    go to state 30
    SHIFT_EXPR  go to state 31
    ADD_EXPR    go to state 32
    MULT_EXPR   go to state 33
    UNARY       go to state 34
    FACTOR      go to state 35


State 179

   16 DECLARATION: VARTYPE_INT ARRAY_DECLARATOR TOK_EQASSIGN TOK_LCBRACKET FUNC_CALL_ARGS TOK_RCBRACKET TOK_SEMICOLON .

    $default  reduce using rule 16 (DECLARATION)


State 180

   21 FUNC_CALL_ARGS: FUNC_CALL_ARGS TOK_COMMA ARG_SINGLE .

    $default  reduce using rule 21 (FUNC_CALL_ARGS)


State 181

   40 LOGIC_EXPR: LOGIC_EXPR . TOK_LOGIC_AND BIT_EXPR
   41           | LOGIC_EXPR . TOK_LOGIC_OR BIT_EXPR
   93 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR . TOK_RBRACKET STATEMENT
   94                 | TOK_IF TOK_LBRACKET LOGIC_EXPR . TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT

    TOK_LOGIC_AND  shift, and go to state 55
    TOK_LOGIC_OR   shift, and go to state 56
    TOK_RBRACKET   shift, and go to state 192


State 182

   96 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET ASSIGN_EXPR . TOK_RBRACKET STATEMENT

    TOK_RBRACKET  shift, and go to state 193


State 183

   97 ITER_STATEMENT: TOK_FOR TOK_LBRACKET EXPR_STATEMENT . EXPR_STATEMENT ASSIGN_EXPR TOK_RBRACKET STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR     go to state 132
    COND_EXPR       go to state 42
    LOGIC_EXPR      go to state 43
    BIT_EXPR        go to state 28
    EQ_EXPR         go to state 29
    REL_EXPR        go to state 30
    SHIFT_EXPR      go to state 31
    ADD_EXPR        go to state 32
    MULT_EXPR       go to state 33
    UNARY           go to state 34
    FACTOR          go to state 44
    EXPR_STATEMENT  go to state 194


State 184

   40 LOGIC_EXPR: LOGIC_EXPR . TOK_LOGIC_AND BIT_EXPR
   41           | LOGIC_EXPR . TOK_LOGIC_OR BIT_EXPR
   95 SELECT_STATEMENT: TOK_SWITCH TOK_LBRACKET LOGIC_EXPR . TOK_RBRACKET STATEMENT

    TOK_LOGIC_AND  shift, and go to state 55
    TOK_LOGIC_OR   shift, and go to state 56
    TOK_RBRACKET   shift, and go to state 195


State 185

   86 SWITCH_STATEMENT: TOK_CASE COND_EXPR TOK_COLON . STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_IF         shift, and go to state 119
    TOK_WHILE      shift, and go to state 120
    TOK_FOR        shift, and go to state 121
    TOK_SWITCH     shift, and go to state 122
    TOK_CASE       shift, and go to state 123
    TOK_DEFAULT    shift, and go to state 124
    TOK_RETURN     shift, and go to state 125
    TOK_BREAK      shift, and go to state 126
    TOK_CONT       shift, and go to state 127
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_LCBRACKET  shift, and go to state 77
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR       go to state 132
    COND_EXPR         go to state 42
    LOGIC_EXPR        go to state 43
    BIT_EXPR          go to state 28
    EQ_EXPR           go to state 29
    REL_EXPR          go to state 30
    SHIFT_EXPR        go to state 31
    ADD_EXPR          go to state 32
    MULT_EXPR         go to state 33
    UNARY             go to state 34
    FACTOR            go to state 44
    STATEMENT         go to state 196
    SWITCH_STATEMENT  go to state 135
    EXPR_STATEMENT    go to state 136
    FUNC_STATEMENT    go to state 137
    SELECT_STATEMENT  go to state 138
    ITER_STATEMENT    go to state 139
    JUMP_STATEMENT    go to state 140


State 186

   87 SWITCH_STATEMENT: TOK_DEFAULT TOK_COLON STATEMENT .

    $default  reduce using rule 87 (SWITCH_STATEMENT)


State 187

    6 FUNCTION: VARTYPE_INT DECLARATOR . TOK_LBRACKET FUNC_ARGS TOK_RBRACKET FUNC_STATEMENT
    7         | VARTYPE_INT DECLARATOR . TOK_LBRACKET TOK_RBRACKET FUNC_STATEMENT
    8         | VARTYPE_INT DECLARATOR . TOK_LBRACKET FUNC_ARGS TOK_RBRACKET TOK_SEMICOLON
    9         | VARTYPE_INT DECLARATOR . TOK_LBRACKET TOK_RBRACKET TOK_SEMICOLON

    TOK_LBRACKET  shift, and go to state 13


State 188

  101 JUMP_STATEMENT: TOK_RETURN FUNCTION TOK_SEMICOLON .

    $default  reduce using rule 101 (JUMP_STATEMENT)


State 189

  102 JUMP_STATEMENT: TOK_RETURN LOGIC_EXPR TOK_SEMICOLON .

    $default  reduce using rule 102 (JUMP_STATEMENT)


State 190

   92 FUNC_STATEMENT: TOK_LCBRACKET REC_DECLARATION REC_STATEMENT TOK_RCBRACKET .

    $default  reduce using rule 92 (FUNC_STATEMENT)


State 191

   38 COND_EXPR: LOGIC_EXPR TOK_QMARK ASSIGN_EXPR TOK_COLON COND_EXPR .

    $default  reduce using rule 38 (COND_EXPR)


State 192

   93 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET . STATEMENT
   94                 | TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET . STATEMENT TOK_ELSE STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_IF         shift, and go to state 119
    TOK_WHILE      shift, and go to state 120
    TOK_FOR        shift, and go to state 121
    TOK_SWITCH     shift, and go to state 122
    TOK_CASE       shift, and go to state 123
    TOK_DEFAULT    shift, and go to state 124
    TOK_RETURN     shift, and go to state 125
    TOK_BREAK      shift, and go to state 126
    TOK_CONT       shift, and go to state 127
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_LCBRACKET  shift, and go to state 77
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR       go to state 132
    COND_EXPR         go to state 42
    LOGIC_EXPR        go to state 43
    BIT_EXPR          go to state 28
    EQ_EXPR           go to state 29
    REL_EXPR          go to state 30
    SHIFT_EXPR        go to state 31
    ADD_EXPR          go to state 32
    MULT_EXPR         go to state 33
    UNARY             go to state 34
    FACTOR            go to state 44
    STATEMENT         go to state 197
    SWITCH_STATEMENT  go to state 135
    EXPR_STATEMENT    go to state 136
    FUNC_STATEMENT    go to state 137
    SELECT_STATEMENT  go to state 138
    ITER_STATEMENT    go to state 139
    JUMP_STATEMENT    go to state 140


State 193

   96 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET ASSIGN_EXPR TOK_RBRACKET . STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_IF         shift, and go to state 119
    TOK_WHILE      shift, and go to state 120
    TOK_FOR        shift, and go to state 121
    TOK_SWITCH     shift, and go to state 122
    TOK_CASE       shift, and go to state 123
    TOK_DEFAULT    shift, and go to state 124
    TOK_RETURN     shift, and go to state 125
    TOK_BREAK      shift, and go to state 126
    TOK_CONT       shift, and go to state 127
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_LCBRACKET  shift, and go to state 77
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR       go to state 132
    COND_EXPR         go to state 42
    LOGIC_EXPR        go to state 43
    BIT_EXPR          go to state 28
    EQ_EXPR           go to state 29
    REL_EXPR          go to state 30
    SHIFT_EXPR        go to state 31
    ADD_EXPR          go to state 32
    MULT_EXPR         go to state 33
    UNARY             go to state 34
    FACTOR            go to state 44
    STATEMENT         go to state 198
    SWITCH_STATEMENT  go to state 135
    EXPR_STATEMENT    go to state 136
    FUNC_STATEMENT    go to state 137
    SELECT_STATEMENT  go to state 138
    ITER_STATEMENT    go to state 139
    JUMP_STATEMENT    go to state 140


State 194

   97 ITER_STATEMENT: TOK_FOR TOK_LBRACKET EXPR_STATEMENT EXPR_STATEMENT . ASSIGN_EXPR TOK_RBRACKET STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR  go to state 199
    COND_EXPR    go to state 42
    LOGIC_EXPR   go to state 43
    BIT_EXPR     go to state 28
    EQ_EXPR      go to state 29
    REL_EXPR     go to state 30
    SHIFT_EXPR   go to state 31
    ADD_EXPR     go to state 32
    MULT_EXPR    go to state 33
    UNARY        go to state 34
    FACTOR       go to state 44


State 195

   95 SELECT_STATEMENT: TOK_SWITCH TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET . STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_IF         shift, and go to state 119
    TOK_WHILE      shift, and go to state 120
    TOK_FOR        shift, and go to state 121
    TOK_SWITCH     shift, and go to state 122
    TOK_CASE       shift, and go to state 123
    TOK_DEFAULT    shift, and go to state 124
    TOK_RETURN     shift, and go to state 125
    TOK_BREAK      shift, and go to state 126
    TOK_CONT       shift, and go to state 127
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_LCBRACKET  shift, and go to state 77
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR       go to state 132
    COND_EXPR         go to state 42
    LOGIC_EXPR        go to state 43
    BIT_EXPR          go to state 28
    EQ_EXPR           go to state 29
    REL_EXPR          go to state 30
    SHIFT_EXPR        go to state 31
    ADD_EXPR          go to state 32
    MULT_EXPR         go to state 33
    UNARY             go to state 34
    FACTOR            go to state 44
    STATEMENT         go to state 200
    SWITCH_STATEMENT  go to state 135
    EXPR_STATEMENT    go to state 136
    FUNC_STATEMENT    go to state 137
    SELECT_STATEMENT  go to state 138
    ITER_STATEMENT    go to state 139
    JUMP_STATEMENT    go to state 140


State 196

   86 SWITCH_STATEMENT: TOK_CASE COND_EXPR TOK_COLON STATEMENT .

    $default  reduce using rule 86 (SWITCH_STATEMENT)


State 197

   93 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT .
   94                 | TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT . TOK_ELSE STATEMENT

    TOK_ELSE  shift, and go to state 201

    TOK_ELSE  [reduce using rule 93 (SELECT_STATEMENT)]
    $default  reduce using rule 93 (SELECT_STATEMENT)


State 198

   96 ITER_STATEMENT: TOK_WHILE TOK_LBRACKET ASSIGN_EXPR TOK_RBRACKET STATEMENT .

    $default  reduce using rule 96 (ITER_STATEMENT)


State 199

   97 ITER_STATEMENT: TOK_FOR TOK_LBRACKET EXPR_STATEMENT EXPR_STATEMENT ASSIGN_EXPR . TOK_RBRACKET STATEMENT

    TOK_RBRACKET  shift, and go to state 202


State 200

   95 SELECT_STATEMENT: TOK_SWITCH TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT .

    $default  reduce using rule 95 (SELECT_STATEMENT)


State 201

   94 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE . STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_IF         shift, and go to state 119
    TOK_WHILE      shift, and go to state 120
    TOK_FOR        shift, and go to state 121
    TOK_SWITCH     shift, and go to state 122
    TOK_CASE       shift, and go to state 123
    TOK_DEFAULT    shift, and go to state 124
    TOK_RETURN     shift, and go to state 125
    TOK_BREAK      shift, and go to state 126
    TOK_CONT       shift, and go to state 127
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_LCBRACKET  shift, and go to state 77
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR       go to state 132
    COND_EXPR         go to state 42
    LOGIC_EXPR        go to state 43
    BIT_EXPR          go to state 28
    EQ_EXPR           go to state 29
    REL_EXPR          go to state 30
    SHIFT_EXPR        go to state 31
    ADD_EXPR          go to state 32
    MULT_EXPR         go to state 33
    UNARY             go to state 34
    FACTOR            go to state 44
    STATEMENT         go to state 203
    SWITCH_STATEMENT  go to state 135
    EXPR_STATEMENT    go to state 136
    FUNC_STATEMENT    go to state 137
    SELECT_STATEMENT  go to state 138
    ITER_STATEMENT    go to state 139
    JUMP_STATEMENT    go to state 140


State 202

   97 ITER_STATEMENT: TOK_FOR TOK_LBRACKET EXPR_STATEMENT EXPR_STATEMENT ASSIGN_EXPR TOK_RBRACKET . STATEMENT

    TOK_LOGIC_NOT  shift, and go to state 18
    TOK_BIT_NOT    shift, and go to state 19
    TOK_IF         shift, and go to state 119
    TOK_WHILE      shift, and go to state 120
    TOK_FOR        shift, and go to state 121
    TOK_SWITCH     shift, and go to state 122
    TOK_CASE       shift, and go to state 123
    TOK_DEFAULT    shift, and go to state 124
    TOK_RETURN     shift, and go to state 125
    TOK_BREAK      shift, and go to state 126
    TOK_CONT       shift, and go to state 127
    TOK_MINUS      shift, and go to state 20
    TOK_LBRACKET   shift, and go to state 21
    TOK_LCBRACKET  shift, and go to state 77
    TOK_N          shift, and go to state 23
    TOK_VAR        shift, and go to state 24
    TOK_INCR       shift, and go to state 25
    TOK_DECR       shift, and go to state 26

    ASSIGN_EXPR       go to state 132
    COND_EXPR         go to state 42
    LOGIC_EXPR        go to state 43
    BIT_EXPR          go to state 28
    EQ_EXPR           go to state 29
    REL_EXPR          go to state 30
    SHIFT_EXPR        go to state 31
    ADD_EXPR          go to state 32
    MULT_EXPR         go to state 33
    UNARY             go to state 34
    FACTOR            go to state 44
    STATEMENT         go to state 204
    SWITCH_STATEMENT  go to state 135
    EXPR_STATEMENT    go to state 136
    FUNC_STATEMENT    go to state 137
    SELECT_STATEMENT  go to state 138
    ITER_STATEMENT    go to state 139
    JUMP_STATEMENT    go to state 140


State 203

   94 SELECT_STATEMENT: TOK_IF TOK_LBRACKET LOGIC_EXPR TOK_RBRACKET STATEMENT TOK_ELSE STATEMENT .

    $default  reduce using rule 94 (SELECT_STATEMENT)


State 204

   97 ITER_STATEMENT: TOK_FOR TOK_LBRACKET EXPR_STATEMENT EXPR_STATEMENT ASSIGN_EXPR TOK_RBRACKET STATEMENT .

    $default  reduce using rule 97 (ITER_STATEMENT)
